{"version":3,"file":"static/js/360.66342d70.chunk.js","mappings":"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","sources":["pages/Remote1AppPage.tsx","pages/Remote2AppPage.tsx","App.tsx","reportWebVitals.ts","bootstrap/host.tsx"],"sourcesContent":["import { CircularProgress } from \"@mui/material\";\nimport React from \"react\";\nimport { ErrorBoundary } from \"react-error-boundary\";\n\n// @ts-ignore\nconst Remote1App = React.lazy(() => import(\"remote_app_1/App\"));\n\nexport const Remote1AppPage = () => {\n  return (\n    <ErrorBoundary fallback={<h1>ðŸ¤·</h1>}>\n      <React.Suspense fallback={<CircularProgress />}>\n        <Remote1App />\n      </React.Suspense>\n    </ErrorBoundary>\n  );\n};\n","import { CircularProgress } from \"@mui/material\";\nimport React from \"react\";\nimport { ErrorBoundary } from \"react-error-boundary\";\n\n// @ts-ignore\nconst Remote2App = React.lazy(() => import(\"remote_app_2/App\"));\n\nexport const Remote2AppPage = () => {\n  return (\n    <ErrorBoundary fallback={<h1>ðŸ¤·</h1>}>\n      <React.Suspense fallback={<CircularProgress />}>\n        <Remote2App />\n      </React.Suspense>\n    </ErrorBoundary>\n  );\n};\n","import {\n  Box,\n  Button,\n  CircularProgress,\n  Stack,\n  Tab,\n  Tabs,\n  ThemeProvider,\n  Typography,\n  createTheme,\n} from \"@mui/material\";\nimport { useState } from \"react\";\nimport {\n  Navigate,\n  Route,\n  Routes,\n  useLocation,\n  useNavigate,\n} from \"react-router-dom\";\nimport { Remote1AppPage } from \"./pages/Remote1AppPage\";\nimport { Remote2AppPage } from \"./pages/Remote2AppPage\";\n\nexport const App = () => {\n  const { pathname, search } = useLocation();\n  const navigate = useNavigate();\n\n  const query = new URLSearchParams(search);\n  const spin = query.get(\"spin\");\n\n  const [primaryMain, setPrimaryMain] = useState(\"#1976d2\");\n\n  return (\n    <ThemeProvider\n      theme={createTheme({\n        palette: {\n          primary: {\n            main: primaryMain,\n          },\n        },\n      })}\n    >\n      <Stack\n        direction=\"row\"\n        sx={{ justifyContent: \"space-between\", alignItems: \"center\" }}\n      >\n        <Typography variant=\"h4\" sx={{ p: 1 }}>\n          MFE Example: Host App\n        </Typography>\n        <Box>\n          <Button\n            sx={{ color: \"#f44336\" }}\n            onClick={() => setPrimaryMain(\"#f44336\")}\n          >\n            Red\n          </Button>\n          <Button\n            sx={{ color: \"#4caf50\" }}\n            onClick={() => setPrimaryMain(\"#4caf50\")}\n          >\n            Green\n          </Button>\n          <Button\n            sx={{ color: \"#1976d2\" }}\n            onClick={() => setPrimaryMain(\"#1976d2\")}\n          >\n            Blue\n          </Button>\n        </Box>\n      </Stack>\n      <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n        <Tabs value={pathname.slice(1)} onChange={(e, v) => navigate(v)}>\n          <Tab label=\"Item One\" value=\"remote1\" />\n          <Tab label=\"Item Two\" value=\"remote2\" />\n          <Tab label=\"Item Three\" value=\"mix\" />\n        </Tabs>\n      </Box>\n      <Box sx={{ p: 2 }}>\n        <Routes>\n          <Route\n            path=\"/remote1\"\n            element={spin ? <CircularProgress /> : <Remote1AppPage />}\n          />\n          <Route\n            path=\"/remote2\"\n            element={spin ? <CircularProgress /> : <Remote2AppPage />}\n          />\n          <Route path=\"/mix\" element={<CircularProgress />} />\n          <Route index element={<Navigate to=\"remote1\" />} />\n        </Routes>\n      </Box>\n    </ThemeProvider>\n  );\n};\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport {\n  Route,\n  RouterProvider,\n  createHashRouter,\n  createRoutesFromElements,\n} from \"react-router-dom\";\nimport { App } from \"../App\";\nimport \"../index.css\";\nimport reportWebVitals from \"../reportWebVitals\";\n\nconst router = createHashRouter(\n  createRoutesFromElements(<Route path=\"/*\" element={<App />} />)\n);\n\nconst root = ReactDOM.createRoot(\n  document.getElementById(\"root\") as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <RouterProvider router={router} />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"names":["Remote1App","React","Remote1AppPage","_jsx","ErrorBoundary","fallback","children","CircularProgress","Remote2App","Remote2AppPage","App","pathname","search","useLocation","navigate","useNavigate","spin","URLSearchParams","get","primaryMain","setPrimaryMain","useState","_jsxs","ThemeProvider","theme","createTheme","palette","primary","main","Stack","direction","sx","justifyContent","alignItems","Typography","variant","p","Box","Button","color","onClick","borderBottom","borderColor","Tabs","value","slice","onChange","e","v","Tab","label","Routes","Route","path","element","index","Navigate","to","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","router","createHashRouter","createRoutesFromElements","ReactDOM","document","getElementById","render","RouterProvider","reportWebVitals"],"sourceRoot":""}