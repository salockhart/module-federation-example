{"version":3,"file":"static/js/677.f072c35c.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/@remix-run/router/history.ts","../node_modules/@remix-run/router/utils.ts","../node_modules/@remix-run/router/router.ts","../node_modules/react-router/lib/context.ts","../node_modules/react-router/lib/hooks.tsx","../node_modules/react-router/lib/components.tsx","../node_modules/react-router/index.ts","../node_modules/react-router-dom/dom.ts","../node_modules/react-router-dom/index.tsx","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/typeof.js"],"sourcesContent":["import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import _typeof from \"./typeof.js\";\nexport default function _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  };\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Actions represent the type of change to a location value.\n */\nexport enum Action {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Pop = \"POP\",\n\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Push = \"PUSH\",\n\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Replace = \"REPLACE\",\n}\n\n/**\n * The pathname, search, and hash values of a URL.\n */\nexport interface Path {\n  /**\n   * A URL pathname, beginning with a /.\n   */\n  pathname: string;\n\n  /**\n   * A URL search string, beginning with a ?.\n   */\n  search: string;\n\n  /**\n   * A URL fragment identifier, beginning with a #.\n   */\n  hash: string;\n}\n\n/**\n * An entry in a history stack. A location contains information about the\n * URL path, as well as possibly some arbitrary state and a key.\n */\nexport interface Location extends Path {\n  /**\n   * A value of arbitrary data associated with this location.\n   */\n  state: any;\n\n  /**\n   * A unique string associated with this location. May be used to safely store\n   * and retrieve data in some other storage API, like `localStorage`.\n   *\n   * Note: This value is always \"default\" on the initial location.\n   */\n  key: string;\n}\n\n/**\n * A change to the current location.\n */\nexport interface Update {\n  /**\n   * The action that triggered the change.\n   */\n  action: Action;\n\n  /**\n   * The new location.\n   */\n  location: Location;\n\n  /**\n   * The delta between this location and the former location in the history stack\n   */\n  delta: number | null;\n}\n\n/**\n * A function that receives notifications about location changes.\n */\nexport interface Listener {\n  (update: Update): void;\n}\n\n/**\n * Describes a location that is the destination of some navigation, either via\n * `history.push` or `history.replace`. May be either a URL or the pieces of a\n * URL path.\n */\nexport type To = string | Partial<Path>;\n\n/**\n * A history is an interface to the navigation stack. The history serves as the\n * source of truth for the current location, as well as provides a set of\n * methods that may be used to change it.\n *\n * It is similar to the DOM's `window.history` object, but with a smaller, more\n * focused API.\n */\nexport interface History {\n  /**\n   * The last action that modified the current location. This will always be\n   * Action.Pop when a history instance is first created. This value is mutable.\n   */\n  readonly action: Action;\n\n  /**\n   * The current location. This value is mutable.\n   */\n  readonly location: Location;\n\n  /**\n   * Returns a valid href for the given `to` value that may be used as\n   * the value of an <a href> attribute.\n   *\n   * @param to - The destination URL\n   */\n  createHref(to: To): string;\n\n  /**\n   * Returns a URL for the given `to` value\n   *\n   * @param to - The destination URL\n   */\n  createURL(to: To): URL;\n\n  /**\n   * Encode a location the same way window.history would do (no-op for memory\n   * history) so we ensure our PUSH/REPLACE navigations for data routers\n   * behave the same as POP\n   *\n   * @param to Unencoded path\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * Pushes a new location onto the history stack, increasing its length by one.\n   * If there were any entries in the stack after the current one, they are\n   * lost.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  push(to: To, state?: any): void;\n\n  /**\n   * Replaces the current location in the history stack with a new one.  The\n   * location that was replaced will no longer be available.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  replace(to: To, state?: any): void;\n\n  /**\n   * Navigates `n` entries backward/forward in the history stack relative to the\n   * current index. For example, a \"back\" navigation would use go(-1).\n   *\n   * @param delta - The delta in the stack index\n   */\n  go(delta: number): void;\n\n  /**\n   * Sets up a listener that will be called whenever the current location\n   * changes.\n   *\n   * @param listener - A function that will be called when the location changes\n   * @returns unlisten - A function that may be used to stop listening\n   */\n  listen(listener: Listener): () => void;\n}\n\ntype HistoryState = {\n  usr: any;\n  key?: string;\n  idx: number;\n};\n\nconst PopStateEventType = \"popstate\";\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Memory History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A user-supplied object that describes a location. Used when providing\n * entries to `createMemoryHistory` via its `initialEntries` option.\n */\nexport type InitialEntry = string | Partial<Location>;\n\nexport type MemoryHistoryOptions = {\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  v5Compat?: boolean;\n};\n\n/**\n * A memory history stores locations in memory. This is useful in stateful\n * environments where there is no web browser, such as node tests or React\n * Native.\n */\nexport interface MemoryHistory extends History {\n  /**\n   * The current index in the history stack.\n   */\n  readonly index: number;\n}\n\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nexport function createMemoryHistory(\n  options: MemoryHistoryOptions = {}\n): MemoryHistory {\n  let { initialEntries = [\"/\"], initialIndex, v5Compat = false } = options;\n  let entries: Location[]; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) =>\n    createMemoryLocation(\n      entry,\n      typeof entry === \"string\" ? null : entry.state,\n      index === 0 ? \"default\" : undefined\n    )\n  );\n  let index = clampIndex(\n    initialIndex == null ? entries.length - 1 : initialIndex\n  );\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  function clampIndex(n: number): number {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation(): Location {\n    return entries[index];\n  }\n  function createMemoryLocation(\n    to: To,\n    state: any = null,\n    key?: string\n  ): Location {\n    let location = createLocation(\n      entries ? getCurrentLocation().pathname : \"/\",\n      to,\n      state,\n      key\n    );\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\n        to\n      )}`\n    );\n    return location;\n  }\n\n  function createHref(to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  let history: MemoryHistory = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to: To) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\",\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 1 });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 0 });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({ action, location: nextLocation, delta });\n      }\n    },\n    listen(fn: Listener) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    },\n  };\n\n  return history;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Browser History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A browser history stores the current location in regular URLs in a web\n * browser environment. This is the standard for most web apps and provides the\n * cleanest URLs the browser's address bar.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#browserhistory\n */\nexport interface BrowserHistory extends UrlHistory {}\n\nexport type BrowserHistoryOptions = UrlHistoryOptions;\n\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nexport function createBrowserHistory(\n  options: BrowserHistoryOptions = {}\n): BrowserHistory {\n  function createBrowserLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let { pathname, search, hash } = window.location;\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createBrowserHref(window: Window, to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  return getUrlBasedHistory(\n    createBrowserLocation,\n    createBrowserHref,\n    null,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hash History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A hash history stores the current location in the fragment identifier portion\n * of the URL in a web browser environment.\n *\n * This is ideal for apps that do not control the server for some reason\n * (because the fragment identifier is never sent to the server), including some\n * shared hosting environments that do not provide fine-grained controls over\n * which pages are served at which URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#hashhistory\n */\nexport interface HashHistory extends UrlHistory {}\n\nexport type HashHistoryOptions = UrlHistoryOptions;\n\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nexport function createHashHistory(\n  options: HashHistoryOptions = {}\n): HashHistory {\n  function createHashLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\",\n    } = parsePath(window.location.hash.substr(1));\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createHashHref(window: Window, to: To) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n\n  function validateHashLocation(location: Location, to: To) {\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\n        to\n      )})`\n    );\n  }\n\n  return getUrlBasedHistory(\n    createHashLocation,\n    createHashHref,\n    validateHashLocation,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region UTILS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n */\nexport function invariant(value: boolean, message?: string): asserts value;\nexport function invariant<T>(\n  value: T | null | undefined,\n  message?: string\n): asserts value is T;\nexport function invariant(value: any, message?: string) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\nexport function warning(cond: any, message: string) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location: Location, index: number): HistoryState {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index,\n  };\n}\n\n/**\n * Creates a Location object with a unique key from the given Path\n */\nexport function createLocation(\n  current: string | Location,\n  to: To,\n  state: any = null,\n  key?: string\n): Readonly<Location> {\n  let location: Readonly<Location> = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...(typeof to === \"string\" ? parsePath(to) : to),\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: (to && (to as Location).key) || key || createKey(),\n  };\n  return location;\n}\n\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nexport function createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\",\n}: Partial<Path>) {\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nexport function parsePath(path: string): Partial<Path> {\n  let parsedPath: Partial<Path> = {};\n\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nexport interface UrlHistory extends History {}\n\nexport type UrlHistoryOptions = {\n  window?: Window;\n  v5Compat?: boolean;\n};\n\nfunction getUrlBasedHistory(\n  getLocation: (window: Window, globalHistory: Window[\"history\"]) => Location,\n  createHref: (window: Window, to: To) => string,\n  validateLocation: ((location: Location, to: To) => void) | null,\n  options: UrlHistoryOptions = {}\n): UrlHistory {\n  let { window = document.defaultView!, v5Compat = false } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  let index = getIndex()!;\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\n  }\n\n  function getIndex(): number {\n    let state = globalHistory.state || { idx: null };\n    return state.idx;\n  }\n\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({ action, location: history.location, delta });\n    }\n  }\n\n  function push(to: To, state?: any) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 1 });\n    }\n  }\n\n  function replace(to: To, state?: any) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 0 });\n    }\n  }\n\n  function createURL(to: To): URL {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base =\n      window.location.origin !== \"null\"\n        ? window.location.origin\n        : window.location.href;\n\n    let href = typeof to === \"string\" ? to : createPath(to);\n    invariant(\n      base,\n      `No window.location.(origin|href) available to create URL for href: ${href}`\n    );\n    return new URL(href, base);\n  }\n\n  let history: History = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn: Listener) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash,\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    },\n  };\n\n  return history;\n}\n\n//#endregion\n","import type { Location, Path, To } from \"./history\";\nimport { warning, invariant, parsePath } from \"./history\";\n\n/**\n * Map of routeId -> data returned from a loader/action/error\n */\nexport interface RouteData {\n  [routeId: string]: any;\n}\n\nexport enum ResultType {\n  data = \"data\",\n  deferred = \"deferred\",\n  redirect = \"redirect\",\n  error = \"error\",\n}\n\n/**\n * Successful result from a loader or action\n */\nexport interface SuccessResult {\n  type: ResultType.data;\n  data: any;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Successful defer() result from a loader or action\n */\nexport interface DeferredResult {\n  type: ResultType.deferred;\n  deferredData: DeferredData;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Redirect result from a loader or action\n */\nexport interface RedirectResult {\n  type: ResultType.redirect;\n  status: number;\n  location: string;\n  revalidate: boolean;\n}\n\n/**\n * Unsuccessful result from a loader or action\n */\nexport interface ErrorResult {\n  type: ResultType.error;\n  error: any;\n  headers?: Headers;\n}\n\n/**\n * Result from a loader or action - potentially successful or unsuccessful\n */\nexport type DataResult =\n  | SuccessResult\n  | DeferredResult\n  | RedirectResult\n  | ErrorResult;\n\ntype LowerCaseFormMethod = \"get\" | \"post\" | \"put\" | \"patch\" | \"delete\";\ntype UpperCaseFormMethod = Uppercase<LowerCaseFormMethod>;\n\n/**\n * Users can specify either lowercase or uppercase form methods on <Form>,\n * useSubmit(), <fetcher.Form>, etc.\n */\nexport type HTMLFormMethod = LowerCaseFormMethod | UpperCaseFormMethod;\n\n/**\n * Active navigation/fetcher form methods are exposed in lowercase on the\n * RouterState\n */\nexport type FormMethod = LowerCaseFormMethod;\nexport type MutationFormMethod = Exclude<FormMethod, \"get\">;\n\n/**\n * In v7, active navigation/fetcher form methods are exposed in uppercase on the\n * RouterState.  This is to align with the normalization done via fetch().\n */\nexport type V7_FormMethod = UpperCaseFormMethod;\nexport type V7_MutationFormMethod = Exclude<V7_FormMethod, \"GET\">;\n\nexport type FormEncType =\n  | \"application/x-www-form-urlencoded\"\n  | \"multipart/form-data\";\n\n/**\n * @private\n * Internal interface to pass around for action submissions, not intended for\n * external consumption\n */\nexport interface Submission {\n  formMethod: FormMethod | V7_FormMethod;\n  formAction: string;\n  formEncType: FormEncType;\n  formData: FormData;\n}\n\n/**\n * @private\n * Arguments passed to route loader/action functions.  Same for now but we keep\n * this as a private implementation detail in case they diverge in the future.\n */\ninterface DataFunctionArgs {\n  request: Request;\n  params: Params;\n  context?: any;\n}\n\n/**\n * Arguments passed to loader functions\n */\nexport interface LoaderFunctionArgs extends DataFunctionArgs {}\n\n/**\n * Arguments passed to action functions\n */\nexport interface ActionFunctionArgs extends DataFunctionArgs {}\n\n/**\n * Loaders and actions can return anything except `undefined` (`null` is a\n * valid return value if there is no data to return).  Responses are preferred\n * and will ease any future migration to Remix\n */\ntype DataFunctionValue = Response | NonNullable<unknown> | null;\n\n/**\n * Route loader function signature\n */\nexport interface LoaderFunction {\n  (args: LoaderFunctionArgs): Promise<DataFunctionValue> | DataFunctionValue;\n}\n\n/**\n * Route action function signature\n */\nexport interface ActionFunction {\n  (args: ActionFunctionArgs): Promise<DataFunctionValue> | DataFunctionValue;\n}\n\n/**\n * Route shouldRevalidate function signature.  This runs after any submission\n * (navigation or fetcher), so we flatten the navigation/fetcher submission\n * onto the arguments.  It shouldn't matter whether it came from a navigation\n * or a fetcher, what really matters is the URLs and the formData since loaders\n * have to re-run based on the data models that were potentially mutated.\n */\nexport interface ShouldRevalidateFunction {\n  (args: {\n    currentUrl: URL;\n    currentParams: AgnosticDataRouteMatch[\"params\"];\n    nextUrl: URL;\n    nextParams: AgnosticDataRouteMatch[\"params\"];\n    formMethod?: Submission[\"formMethod\"];\n    formAction?: Submission[\"formAction\"];\n    formEncType?: Submission[\"formEncType\"];\n    formData?: Submission[\"formData\"];\n    actionResult?: DataResult;\n    defaultShouldRevalidate: boolean;\n  }): boolean;\n}\n\n/**\n * Function provided by the framework-aware layers to set `hasErrorBoundary`\n * from the framework-aware `errorElement` prop\n *\n * @deprecated Use `mapRouteProperties` instead\n */\nexport interface DetectErrorBoundaryFunction {\n  (route: AgnosticRouteObject): boolean;\n}\n\n/**\n * Function provided by the framework-aware layers to set any framework-specific\n * properties from framework-agnostic properties\n */\nexport interface MapRoutePropertiesFunction {\n  (route: AgnosticRouteObject): {\n    hasErrorBoundary: boolean;\n  } & Record<string, any>;\n}\n\n/**\n * Keys we cannot change from within a lazy() function. We spread all other keys\n * onto the route. Either they're meaningful to the router, or they'll get\n * ignored.\n */\nexport type ImmutableRouteKey =\n  | \"lazy\"\n  | \"caseSensitive\"\n  | \"path\"\n  | \"id\"\n  | \"index\"\n  | \"children\";\n\nexport const immutableRouteKeys = new Set<ImmutableRouteKey>([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"children\",\n]);\n\n/**\n * lazy() function to load a route definition, which can add non-matching\n * related properties to a route\n */\nexport interface LazyRouteFunction<R extends AgnosticRouteObject> {\n  (): Promise<Omit<R, ImmutableRouteKey>>;\n}\n\n/**\n * Base RouteObject with common props shared by all types of routes\n */\ntype AgnosticBaseRouteObject = {\n  caseSensitive?: boolean;\n  path?: string;\n  id?: string;\n  loader?: LoaderFunction;\n  action?: ActionFunction;\n  hasErrorBoundary?: boolean;\n  shouldRevalidate?: ShouldRevalidateFunction;\n  handle?: any;\n  lazy?: LazyRouteFunction<AgnosticBaseRouteObject>;\n};\n\n/**\n * Index routes must not have children\n */\nexport type AgnosticIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: undefined;\n  index: true;\n};\n\n/**\n * Non-index routes may have children, but cannot have index\n */\nexport type AgnosticNonIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: AgnosticRouteObject[];\n  index?: false;\n};\n\n/**\n * A route object represents a logical route, with (optionally) its child\n * routes organized in a tree-like structure.\n */\nexport type AgnosticRouteObject =\n  | AgnosticIndexRouteObject\n  | AgnosticNonIndexRouteObject;\n\nexport type AgnosticDataIndexRouteObject = AgnosticIndexRouteObject & {\n  id: string;\n};\n\nexport type AgnosticDataNonIndexRouteObject = AgnosticNonIndexRouteObject & {\n  children?: AgnosticDataRouteObject[];\n  id: string;\n};\n\n/**\n * A data route object, which is just a RouteObject with a required unique ID\n */\nexport type AgnosticDataRouteObject =\n  | AgnosticDataIndexRouteObject\n  | AgnosticDataNonIndexRouteObject;\n\nexport type RouteManifest = Record<string, AgnosticDataRouteObject | undefined>;\n\n// Recursive helper for finding path parameters in the absence of wildcards\ntype _PathParam<Path extends string> =\n  // split path into individual path segments\n  Path extends `${infer L}/${infer R}`\n    ? _PathParam<L> | _PathParam<R>\n    : // find params after `:`\n    Path extends `:${infer Param}`\n    ? Param extends `${infer Optional}?`\n      ? Optional\n      : Param\n    : // otherwise, there aren't any params present\n      never;\n\n/**\n * Examples:\n * \"/a/b/*\" -> \"*\"\n * \":a\" -> \"a\"\n * \"/a/:b\" -> \"b\"\n * \"/a/blahblahblah:b\" -> \"b\"\n * \"/:a/:b\" -> \"a\" | \"b\"\n * \"/:a/b/:c/*\" -> \"a\" | \"c\" | \"*\"\n */\ntype PathParam<Path extends string> =\n  // check if path is just a wildcard\n  Path extends \"*\" | \"/*\"\n    ? \"*\"\n    : // look for wildcard at the end of the path\n    Path extends `${infer Rest}/*`\n    ? \"*\" | _PathParam<Rest>\n    : // look for params in the absence of wildcards\n      _PathParam<Path>;\n\n// Attempt to parse the given string segment. If it fails, then just return the\n// plain string type as a default fallback. Otherwise return the union of the\n// parsed string literals that were referenced as dynamic segments in the route.\nexport type ParamParseKey<Segment extends string> =\n  // if could not find path params, fallback to `string`\n  [PathParam<Segment>] extends [never] ? string : PathParam<Segment>;\n\n/**\n * The parameters that were parsed from the URL path.\n */\nexport type Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\nexport interface AgnosticRouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The route object that was used to match.\n   */\n  route: RouteObjectType;\n}\n\nexport interface AgnosticDataRouteMatch\n  extends AgnosticRouteMatch<string, AgnosticDataRouteObject> {}\n\nfunction isIndexRoute(\n  route: AgnosticRouteObject\n): route is AgnosticIndexRouteObject {\n  return route.index === true;\n}\n\n// Walk the route tree generating unique IDs where necessary so we are working\n// solely with AgnosticDataRouteObject's within the Router\nexport function convertRoutesToDataRoutes(\n  routes: AgnosticRouteObject[],\n  mapRouteProperties: MapRoutePropertiesFunction,\n  parentPath: number[] = [],\n  manifest: RouteManifest = {}\n): AgnosticDataRouteObject[] {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, index];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(\n      route.index !== true || !route.children,\n      `Cannot specify children on an index route`\n    );\n    invariant(\n      !manifest[id],\n      `Found a route id collision on id \"${id}\".  Route ` +\n        \"id's must be globally unique within Data Router usages\"\n    );\n\n    if (isIndexRoute(route)) {\n      let indexRoute: AgnosticDataIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n      };\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute: AgnosticDataNonIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n        children: undefined,\n      };\n      manifest[id] = pathOrLayoutRoute;\n\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(\n          route.children,\n          mapRouteProperties,\n          treePath,\n          manifest\n        );\n      }\n\n      return pathOrLayoutRoute;\n    }\n  });\n}\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\nexport function matchRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  locationArg: Partial<Location> | string,\n  basename = \"/\"\n): AgnosticRouteMatch<string, RouteObjectType>[] | null {\n  let location =\n    typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch<string, RouteObjectType>(\n      branches[i],\n      // Incoming pathnames are generally encoded from either window.location\n      // or from router.navigate, but we want to match against the unencoded\n      // paths in the route definitions.  Memory router locations won't be\n      // encoded here but there also shouldn't be anything to decode so this\n      // should be a safe operation.  This avoids needing matchRoutes to be\n      // history-aware.\n      safelyDecodeURI(pathname)\n    );\n  }\n\n  return matches;\n}\n\ninterface RouteMeta<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  relativePath: string;\n  caseSensitive: boolean;\n  childrenIndex: number;\n  route: RouteObjectType;\n}\n\ninterface RouteBranch<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  path: string;\n  score: number;\n  routesMeta: RouteMeta<RouteObjectType>[];\n}\n\nfunction flattenRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  branches: RouteBranch<RouteObjectType>[] = [],\n  parentsMeta: RouteMeta<RouteObjectType>[] = [],\n  parentPath = \"\"\n): RouteBranch<RouteObjectType>[] {\n  let flattenRoute = (\n    route: RouteObjectType,\n    index: number,\n    relativePath?: string\n  ) => {\n    let meta: RouteMeta<RouteObjectType> = {\n      relativePath:\n        relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route,\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path ` +\n          `\"${parentPath}\" is not valid. An absolute child route path ` +\n          `must start with the combined path of all its parent routes.`\n      );\n\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n\n    // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n        // Our types know better, but runtime JS may not!\n        // @ts-expect-error\n        route.index !== true,\n        `Index routes must not have child routes. Please remove ` +\n          `all child routes from route path \"${path}\".`\n      );\n\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta,\n    });\n  };\n  routes.forEach((route, index) => {\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n\n  return branches;\n}\n\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path: string): string[] {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n\n  let [first, ...rest] = segments;\n\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n\n  let result: string[] = [];\n\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explodes _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(\n    ...restExploded.map((subpath) =>\n      subpath === \"\" ? required : [required, subpath].join(\"/\")\n    )\n  );\n\n  // Then if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map((exploded) =>\n    path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded\n  );\n}\n\nfunction rankRouteBranches(branches: RouteBranch[]): void {\n  branches.sort((a, b) =>\n    a.score !== b.score\n      ? b.score - a.score // Higher score first\n      : compareIndexes(\n          a.routesMeta.map((meta) => meta.childrenIndex),\n          b.routesMeta.map((meta) => meta.childrenIndex)\n        )\n  );\n}\n\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = (s: string) => s === \"*\";\n\nfunction computeScore(path: string, index: boolean | undefined): number {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments\n    .filter((s) => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === \"\"\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction compareIndexes(a: number[], b: number[]): number {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? // If two routes are siblings, we should try to match the earlier sibling\n      // first. This allows people to have fine-grained control over the matching\n      // behavior by simply putting routes with identical paths in the order they\n      // want them tried.\n      a[a.length - 1] - b[b.length - 1]\n    : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n      // so they sort equally.\n      0;\n}\n\nfunction matchRouteBranch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  branch: RouteBranch<RouteObjectType>,\n  pathname: string\n): AgnosticRouteMatch<ParamKey, RouteObjectType>[] | null {\n  let { routesMeta } = branch;\n\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches: AgnosticRouteMatch<ParamKey, RouteObjectType>[] = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname =\n      matchedPathname === \"/\"\n        ? pathname\n        : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n\n    if (!match) return null;\n\n    Object.assign(matchedParams, match.params);\n\n    let route = meta.route;\n\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams as Params<ParamKey>,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route,\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\nexport function generatePath<Path extends string>(\n  originalPath: Path,\n  params: {\n    [key in PathParam<Path>]: string | null;\n  } = {} as any\n): string {\n  let path: string = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(\n      false,\n      `Route path \"${path}\" will be treated as if it were ` +\n        `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n        `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n        `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n    );\n    path = path.replace(/\\*$/, \"/*\") as Path;\n  }\n\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n\n  const segments = path\n    .split(/\\/+/)\n    .map((segment, index, array) => {\n      const isLastSegment = index === array.length - 1;\n\n      // only apply the splat if it's the last segment\n      if (isLastSegment && segment === \"*\") {\n        const star = \"*\" as PathParam<Path>;\n        const starParam = params[star];\n\n        // Apply the splat\n        return starParam;\n      }\n\n      const keyMatch = segment.match(/^:(\\w+)(\\??)$/);\n      if (keyMatch) {\n        const [, key, optional] = keyMatch;\n        let param = params[key as PathParam<Path>];\n\n        if (optional === \"?\") {\n          return param == null ? \"\" : param;\n        }\n\n        if (param == null) {\n          invariant(false, `Missing \":${key}\" param`);\n        }\n\n        return param;\n      }\n\n      // Remove any optional markers from optional static segments\n      return segment.replace(/\\?$/g, \"\");\n    })\n    // Remove empty segments\n    .filter((segment) => !!segment);\n\n  return prefix + segments.join(\"/\");\n}\n\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\nexport interface PathPattern<Path extends string = string> {\n  /**\n   * A string to match against a URL pathname. May contain `:id`-style segments\n   * to indicate placeholders for dynamic parameters. May also end with `/*` to\n   * indicate matching the rest of the URL pathname.\n   */\n  path: Path;\n  /**\n   * Should be `true` if the static portions of the `path` should be matched in\n   * the same case.\n   */\n  caseSensitive?: boolean;\n  /**\n   * Should be `true` if this pattern should match the entire URL pathname.\n   */\n  end?: boolean;\n}\n\n/**\n * A PathMatch contains info about how a PathPattern matched on a URL pathname.\n */\nexport interface PathMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The pattern that was used to match.\n   */\n  pattern: PathPattern;\n}\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\nexport function matchPath<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(\n  pattern: PathPattern<Path> | Path,\n  pathname: string\n): PathMatch<ParamKey> | null {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n\n  let [matcher, paramNames] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n\n  let match = pathname.match(matcher);\n  if (!match) return null;\n\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params: Params = paramNames.reduce<Mutable<Params>>(\n    (memo, paramName, index) => {\n      // We need to compute the pathnameBase here using the raw splat value\n      // instead of using params[\"*\"] later because it will be decoded then\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname\n          .slice(0, matchedPathname.length - splatValue.length)\n          .replace(/(.)\\/+$/, \"$1\");\n      }\n\n      memo[paramName] = safelyDecodeURIComponent(\n        captureGroups[index] || \"\",\n        paramName\n      );\n      return memo;\n    },\n    {}\n  );\n\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern,\n  };\n}\n\nfunction compilePath(\n  path: string,\n  caseSensitive = false,\n  end = true\n): [RegExp, string[]] {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were ` +\n      `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n      `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n      `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n\n  let paramNames: string[] = [];\n  let regexpSource =\n    \"^\" +\n    path\n      .replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n      .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n      .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n      .replace(/\\/:(\\w+)/g, (_: string, paramName: string) => {\n        paramNames.push(paramName);\n        return \"/([^\\\\/]+)\";\n      });\n\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource +=\n      path === \"*\" || path === \"/*\"\n        ? \"(.*)$\" // Already matched the initial /, just match the rest\n        : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {\n    // Nothing to match for \"\" or \"/\"\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n\n  return [matcher, paramNames];\n}\n\nfunction safelyDecodeURI(value: string) {\n  try {\n    return decodeURI(value);\n  } catch (error) {\n    warning(\n      false,\n      `The URL path \"${value}\" could not be decoded because it is is a ` +\n        `malformed URL segment. This is probably due to a bad percent ` +\n        `encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\nfunction safelyDecodeURIComponent(value: string, paramName: string) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(\n      false,\n      `The value for the URL param \"${paramName}\" will not be decoded because` +\n        ` the string \"${value}\" is a malformed URL segment. This is probably` +\n        ` due to a bad percent encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\n/**\n * @private\n */\nexport function stripBasename(\n  pathname: string,\n  basename: string\n): string | null {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\")\n    ? basename.length - 1\n    : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(startIndex) || \"/\";\n}\n\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\nexport function resolvePath(to: To, fromPathname = \"/\"): Path {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\",\n  } = typeof to === \"string\" ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith(\"/\")\n      ? toPathname\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash),\n  };\n}\n\nfunction resolvePathname(relativePath: string, fromPathname: string): string {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction getInvalidPathError(\n  char: string,\n  field: string,\n  dest: string,\n  path: Partial<Path>\n) {\n  return (\n    `Cannot include a '${char}' character in a manually specified ` +\n    `\\`to.${field}\\` field [${JSON.stringify(\n      path\n    )}].  Please separate it out to the ` +\n    `\\`to.${dest}\\` field. Alternatively you may provide the full path as ` +\n    `a string in <Link to=\"...\"> and the router will parse it for you.`\n  );\n}\n\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nexport function getPathContributingMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[]) {\n  return matches.filter(\n    (match, index) =>\n      index === 0 || (match.route.path && match.route.path.length > 0)\n  );\n}\n\n/**\n * @private\n */\nexport function resolveTo(\n  toArg: To,\n  routePathnames: string[],\n  locationPathname: string,\n  isPathRelative = false\n): Path {\n  let to: Partial<Path>;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = { ...toArg };\n\n    invariant(\n      !to.pathname || !to.pathname.includes(\"?\"),\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\n    );\n    invariant(\n      !to.pathname || !to.pathname.includes(\"#\"),\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\n    );\n    invariant(\n      !to.search || !to.search.includes(\"#\"),\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\n    );\n  }\n\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n\n  let from: string;\n\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (isPathRelative || toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n\n      // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    }\n\n    // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from);\n\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash =\n    toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash =\n    (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (\n    !path.pathname.endsWith(\"/\") &&\n    (hasExplicitTrailingSlash || hasCurrentTrailingSlash)\n  ) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\n/**\n * @private\n */\nexport function getToPathname(to: To): string | undefined {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || (to as Path).pathname === \"\"\n    ? \"/\"\n    : typeof to === \"string\"\n    ? parsePath(to).pathname\n    : to.pathname;\n}\n\n/**\n * @private\n */\nexport const joinPaths = (paths: string[]): string =>\n  paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n\n/**\n * @private\n */\nexport const normalizePathname = (pathname: string): string =>\n  pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\n/**\n * @private\n */\nexport const normalizeSearch = (search: string): string =>\n  !search || search === \"?\"\n    ? \"\"\n    : search.startsWith(\"?\")\n    ? search\n    : \"?\" + search;\n\n/**\n * @private\n */\nexport const normalizeHash = (hash: string): string =>\n  !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n\nexport type JsonFunction = <Data>(\n  data: Data,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nexport const json: JsonFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n\n  return new Response(JSON.stringify(data), {\n    ...responseInit,\n    headers,\n  });\n};\n\nexport interface TrackedPromise extends Promise<any> {\n  _tracked?: boolean;\n  _data?: any;\n  _error?: any;\n}\n\nexport class AbortedDeferredError extends Error {}\n\nexport class DeferredData {\n  private pendingKeysSet: Set<string> = new Set<string>();\n  private controller: AbortController;\n  private abortPromise: Promise<void>;\n  private unlistenAbortSignal: () => void;\n  private subscribers: Set<(aborted: boolean, settledKey?: string) => void> =\n    new Set();\n  data: Record<string, unknown>;\n  init?: ResponseInit;\n  deferredKeys: string[] = [];\n\n  constructor(data: Record<string, unknown>, responseInit?: ResponseInit) {\n    invariant(\n      data && typeof data === \"object\" && !Array.isArray(data),\n      \"defer() only accepts plain objects\"\n    );\n\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject: (e: AbortedDeferredError) => void;\n    this.abortPromise = new Promise((_, r) => (reject = r));\n    this.controller = new AbortController();\n    let onAbort = () =>\n      reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () =>\n      this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n\n    this.data = Object.entries(data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: this.trackPromise(key, value),\n        }),\n      {}\n    );\n\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n\n    this.init = responseInit;\n  }\n\n  private trackPromise(\n    key: string,\n    value: Promise<unknown> | unknown\n  ): TrackedPromise | unknown {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise: TrackedPromise = Promise.race([value, this.abortPromise]).then(\n      (data) => this.onSettle(promise, key, null, data as unknown),\n      (error) => this.onSettle(promise, key, error as unknown)\n    );\n\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n\n    Object.defineProperty(promise, \"_tracked\", { get: () => true });\n    return promise;\n  }\n\n  private onSettle(\n    promise: TrackedPromise,\n    key: string,\n    error: unknown,\n    data?: unknown\n  ): unknown {\n    if (\n      this.controller.signal.aborted &&\n      error instanceof AbortedDeferredError\n    ) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      return Promise.reject(error);\n    }\n\n    this.pendingKeysSet.delete(key);\n\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n\n    if (error) {\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n\n    Object.defineProperty(promise, \"_data\", { get: () => data });\n    this.emit(false, key);\n    return data;\n  }\n\n  private emit(aborted: boolean, settledKey?: string) {\n    this.subscribers.forEach((subscriber) => subscriber(aborted, settledKey));\n  }\n\n  subscribe(fn: (aborted: boolean, settledKey?: string) => void) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n\n  async resolveData(signal: AbortSignal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise((resolve) => {\n        this.subscribe((aborted) => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n\n  get unwrappedData() {\n    invariant(\n      this.data !== null && this.done,\n      \"Can only unwrap data on initialized and settled deferreds\"\n    );\n\n    return Object.entries(this.data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: unwrapTrackedPromise(value),\n        }),\n      {}\n    );\n  }\n\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\n\nfunction isTrackedPromise(value: any): value is TrackedPromise {\n  return (\n    value instanceof Promise && (value as TrackedPromise)._tracked === true\n  );\n}\n\nfunction unwrapTrackedPromise(value: any) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\n\nexport type DeferFunction = (\n  data: Record<string, unknown>,\n  init?: number | ResponseInit\n) => DeferredData;\n\nexport const defer: DeferFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  return new DeferredData(data, responseInit);\n};\n\nexport type RedirectFunction = (\n  url: string,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirect: RedirectFunction = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = { status: responseInit };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n\n  return new Response(null, {\n    ...responseInit,\n    headers,\n  });\n};\n\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n */\nexport class ErrorResponse {\n  status: number;\n  statusText: string;\n  data: any;\n  error?: Error;\n  internal: boolean;\n\n  constructor(\n    status: number,\n    statusText: string | undefined,\n    data: any,\n    internal = false\n  ) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nexport function isRouteErrorResponse(error: any): error is ErrorResponse {\n  return (\n    error != null &&\n    typeof error.status === \"number\" &&\n    typeof error.statusText === \"string\" &&\n    typeof error.internal === \"boolean\" &&\n    \"data\" in error\n  );\n}\n","import type { History, Location, Path, To } from \"./history\";\nimport {\n  Action as HistoryAction,\n  createLocation,\n  createPath,\n  invariant,\n  parsePath,\n  warning,\n} from \"./history\";\nimport type {\n  DataResult,\n  DeferredData,\n  AgnosticDataRouteMatch,\n  AgnosticDataRouteObject,\n  DeferredResult,\n  ErrorResult,\n  FormEncType,\n  FormMethod,\n  DetectErrorBoundaryFunction,\n  RedirectResult,\n  RouteData,\n  AgnosticRouteObject,\n  Submission,\n  SuccessResult,\n  AgnosticRouteMatch,\n  ShouldRevalidateFunction,\n  RouteManifest,\n  ImmutableRouteKey,\n  ActionFunction,\n  LoaderFunction,\n  V7_MutationFormMethod,\n  V7_FormMethod,\n  HTMLFormMethod,\n  MutationFormMethod,\n  MapRoutePropertiesFunction,\n} from \"./utils\";\nimport {\n  ErrorResponse,\n  ResultType,\n  convertRoutesToDataRoutes,\n  getPathContributingMatches,\n  immutableRouteKeys,\n  isRouteErrorResponse,\n  joinPaths,\n  matchRoutes,\n  resolveTo,\n  stripBasename,\n} from \"./utils\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A Router instance manages all navigation and data loading/mutations\n */\nexport interface Router {\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the basename for the router\n   */\n  get basename(): RouterInit[\"basename\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the current state of the router\n   */\n  get state(): RouterState;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the routes for this router instance\n   */\n  get routes(): AgnosticDataRouteObject[];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Initialize the router, including adding history listeners and kicking off\n   * initial data fetches.  Returns a function to cleanup listeners and abort\n   * any in-progress loads\n   */\n  initialize(): Router;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Subscribe to router.state updates\n   *\n   * @param fn function to call with the new state\n   */\n  subscribe(fn: RouterSubscriber): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Enable scroll restoration behavior in the router\n   *\n   * @param savedScrollPositions Object that will manage positions, in case\n   *                             it's being restored from sessionStorage\n   * @param getScrollPosition    Function to get the active Y scroll position\n   * @param getKey               Function to get the key to use for restoration\n   */\n  enableScrollRestoration(\n    savedScrollPositions: Record<string, number>,\n    getScrollPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Navigate forward/backward in the history stack\n   * @param to Delta to move in the history stack\n   */\n  navigate(to: number): Promise<void>;\n\n  /**\n   * Navigate to the given path\n   * @param to Path to navigate to\n   * @param opts Navigation options (method, submission, etc.)\n   */\n  navigate(to: To | null, opts?: RouterNavigateOptions): Promise<void>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a fetcher load/submission\n   *\n   * @param key     Fetcher key\n   * @param routeId Route that owns the fetcher\n   * @param href    href to fetch\n   * @param opts    Fetcher options, (method, submission, etc.)\n   */\n  fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterNavigateOptions\n  ): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a revalidation of all current route loaders and fetcher loads\n   */\n  revalidate(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to create an href for the given location\n   * @param location\n   */\n  createHref(location: Location | URL): string;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to URL encode a destination path according to the internal\n   * history implementation\n   * @param to\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get/create a fetcher for the given key\n   * @param key\n   */\n  getFetcher<TData = any>(key?: string): Fetcher<TData>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete the fetcher for a given key\n   * @param key\n   */\n  deleteFetcher(key?: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Cleanup listeners and abort any in-progress loads\n   */\n  dispose(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get a navigation blocker\n   * @param key The identifier for the blocker\n   * @param fn The blocker function implementation\n   */\n  getBlocker(key: string, fn: BlockerFunction): Blocker;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete a navigation blocker\n   * @param key The identifier for the blocker\n   */\n  deleteBlocker(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * HMR needs to pass in-flight route updates to React Router\n   * TODO: Replace this with granular route update APIs (addRoute, updateRoute, deleteRoute)\n   */\n  _internalSetRoutes(routes: AgnosticRouteObject[]): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal fetch AbortControllers accessed by unit tests\n   */\n  _internalFetchControllers: Map<string, AbortController>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal pending DeferredData instances accessed by unit tests\n   */\n  _internalActiveDeferreds: Map<string, DeferredData>;\n}\n\n/**\n * State maintained internally by the router.  During a navigation, all states\n * reflect the the \"old\" location unless otherwise noted.\n */\nexport interface RouterState {\n  /**\n   * The action of the most recent navigation\n   */\n  historyAction: HistoryAction;\n\n  /**\n   * The current location reflected by the router\n   */\n  location: Location;\n\n  /**\n   * The current set of route matches\n   */\n  matches: AgnosticDataRouteMatch[];\n\n  /**\n   * Tracks whether we've completed our initial data load\n   */\n  initialized: boolean;\n\n  /**\n   * Current scroll position we should start at for a new view\n   *  - number -> scroll position to restore to\n   *  - false -> do not restore scroll at all (used during submissions)\n   *  - null -> don't have a saved position, scroll to hash or top of page\n   */\n  restoreScrollPosition: number | false | null;\n\n  /**\n   * Indicate whether this navigation should skip resetting the scroll position\n   * if we are unable to restore the scroll position\n   */\n  preventScrollReset: boolean;\n\n  /**\n   * Tracks the state of the current navigation\n   */\n  navigation: Navigation;\n\n  /**\n   * Tracks any in-progress revalidations\n   */\n  revalidation: RevalidationState;\n\n  /**\n   * Data from the loaders for the current matches\n   */\n  loaderData: RouteData;\n\n  /**\n   * Data from the action for the current matches\n   */\n  actionData: RouteData | null;\n\n  /**\n   * Errors caught from loaders for the current matches\n   */\n  errors: RouteData | null;\n\n  /**\n   * Map of current fetchers\n   */\n  fetchers: Map<string, Fetcher>;\n\n  /**\n   * Map of current blockers\n   */\n  blockers: Map<string, Blocker>;\n}\n\n/**\n * Data that can be passed into hydrate a Router from SSR\n */\nexport type HydrationState = Partial<\n  Pick<RouterState, \"loaderData\" | \"actionData\" | \"errors\">\n>;\n\n/**\n * Future flags to toggle new feature behavior\n */\nexport interface FutureConfig {\n  v7_normalizeFormMethod: boolean;\n  v7_prependBasename: boolean;\n}\n\n/**\n * Initialization options for createRouter\n */\nexport interface RouterInit {\n  routes: AgnosticRouteObject[];\n  history: History;\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n  future?: Partial<FutureConfig>;\n  hydrationData?: HydrationState;\n}\n\n/**\n * State returned from a server-side query() call\n */\nexport interface StaticHandlerContext {\n  basename: Router[\"basename\"];\n  location: RouterState[\"location\"];\n  matches: RouterState[\"matches\"];\n  loaderData: RouterState[\"loaderData\"];\n  actionData: RouterState[\"actionData\"];\n  errors: RouterState[\"errors\"];\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n  actionHeaders: Record<string, Headers>;\n  activeDeferreds: Record<string, DeferredData> | null;\n  _deepestRenderedBoundaryId?: string | null;\n}\n\n/**\n * A StaticHandler instance manages a singular SSR navigation/fetch event\n */\nexport interface StaticHandler {\n  dataRoutes: AgnosticDataRouteObject[];\n  query(\n    request: Request,\n    opts?: { requestContext?: unknown }\n  ): Promise<StaticHandlerContext | Response>;\n  queryRoute(\n    request: Request,\n    opts?: { routeId?: string; requestContext?: unknown }\n  ): Promise<any>;\n}\n\n/**\n * Subscriber function signature for changes to router state\n */\nexport interface RouterSubscriber {\n  (state: RouterState): void;\n}\n\ninterface UseMatchesMatch {\n  id: string;\n  pathname: string;\n  params: AgnosticRouteMatch[\"params\"];\n  data: unknown;\n  handle: unknown;\n}\n\n/**\n * Function signature for determining the key to be used in scroll restoration\n * for a given location\n */\nexport interface GetScrollRestorationKeyFunction {\n  (location: Location, matches: UseMatchesMatch[]): string | null;\n}\n\n/**\n * Function signature for determining the current scroll position\n */\nexport interface GetScrollPositionFunction {\n  (): number;\n}\n\nexport type RelativeRoutingType = \"route\" | \"path\";\n\ntype BaseNavigateOptions = {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  fromRouteId?: string;\n};\n\n/**\n * Options for a navigate() call for a Link navigation\n */\ntype LinkNavigateOptions = BaseNavigateOptions;\n\n/**\n * Options for a navigate() call for a Form navigation\n */\ntype SubmissionNavigateOptions = BaseNavigateOptions & {\n  formMethod?: HTMLFormMethod;\n  formEncType?: FormEncType;\n  formData: FormData;\n};\n\n/**\n * Options to pass to navigate() for either a Link or Form navigation\n */\nexport type RouterNavigateOptions =\n  | LinkNavigateOptions\n  | SubmissionNavigateOptions;\n\n/**\n * Options to pass to fetch()\n */\nexport type RouterFetchOptions =\n  | Omit<LinkNavigateOptions, \"replace\">\n  | Omit<SubmissionNavigateOptions, \"replace\">;\n\n/**\n * Potential states for state.navigation\n */\nexport type NavigationStates = {\n  Idle: {\n    state: \"idle\";\n    location: undefined;\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    formData: undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    location: Location;\n    formMethod: FormMethod | V7_FormMethod | undefined;\n    formAction: string | undefined;\n    formEncType: FormEncType | undefined;\n    formData: FormData | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    location: Location;\n    formMethod: FormMethod | V7_FormMethod;\n    formAction: string;\n    formEncType: FormEncType;\n    formData: FormData;\n  };\n};\n\nexport type Navigation = NavigationStates[keyof NavigationStates];\n\nexport type RevalidationState = \"idle\" | \"loading\";\n\n/**\n * Potential states for fetchers\n */\ntype FetcherStates<TData = any> = {\n  Idle: {\n    state: \"idle\";\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    formData: undefined;\n    data: TData | undefined;\n    \" _hasFetcherDoneAnything \"?: boolean;\n  };\n  Loading: {\n    state: \"loading\";\n    formMethod: FormMethod | V7_FormMethod | undefined;\n    formAction: string | undefined;\n    formEncType: FormEncType | undefined;\n    formData: FormData | undefined;\n    data: TData | undefined;\n    \" _hasFetcherDoneAnything \"?: boolean;\n  };\n  Submitting: {\n    state: \"submitting\";\n    formMethod: FormMethod | V7_FormMethod;\n    formAction: string;\n    formEncType: FormEncType;\n    formData: FormData;\n    data: TData | undefined;\n    \" _hasFetcherDoneAnything \"?: boolean;\n  };\n};\n\nexport type Fetcher<TData = any> =\n  FetcherStates<TData>[keyof FetcherStates<TData>];\n\ninterface BlockerBlocked {\n  state: \"blocked\";\n  reset(): void;\n  proceed(): void;\n  location: Location;\n}\n\ninterface BlockerUnblocked {\n  state: \"unblocked\";\n  reset: undefined;\n  proceed: undefined;\n  location: undefined;\n}\n\ninterface BlockerProceeding {\n  state: \"proceeding\";\n  reset: undefined;\n  proceed: undefined;\n  location: Location;\n}\n\nexport type Blocker = BlockerUnblocked | BlockerBlocked | BlockerProceeding;\n\nexport type BlockerFunction = (args: {\n  currentLocation: Location;\n  nextLocation: Location;\n  historyAction: HistoryAction;\n}) => boolean;\n\ninterface ShortCircuitable {\n  /**\n   * startNavigation does not need to complete the navigation because we\n   * redirected or got interrupted\n   */\n  shortCircuited?: boolean;\n}\n\ninterface HandleActionResult extends ShortCircuitable {\n  /**\n   * Error thrown from the current action, keyed by the route containing the\n   * error boundary to render the error.  To be committed to the state after\n   * loaders have completed\n   */\n  pendingActionError?: RouteData;\n  /**\n   * Data returned from the current action, keyed by the route owning the action.\n   * To be committed to the state after loaders have completed\n   */\n  pendingActionData?: RouteData;\n}\n\ninterface HandleLoadersResult extends ShortCircuitable {\n  /**\n   * loaderData returned from the current set of loaders\n   */\n  loaderData?: RouterState[\"loaderData\"];\n  /**\n   * errors thrown from the current set of loaders\n   */\n  errors?: RouterState[\"errors\"];\n}\n\n/**\n * Cached info for active fetcher.load() instances so they can participate\n * in revalidation\n */\ninterface FetchLoadMatch {\n  routeId: string;\n  path: string;\n}\n\n/**\n * Identified fetcher.load() calls that need to be revalidated\n */\ninterface RevalidatingFetcher extends FetchLoadMatch {\n  key: string;\n  match: AgnosticDataRouteMatch | null;\n  matches: AgnosticDataRouteMatch[] | null;\n  controller: AbortController | null;\n}\n\n/**\n * Wrapper object to allow us to throw any response out from callLoaderOrAction\n * for queryRouter while preserving whether or not it was thrown or returned\n * from the loader/action\n */\ninterface QueryRouteResponse {\n  type: ResultType.data | ResultType.error;\n  response: Response;\n}\n\nconst validMutationMethodsArr: MutationFormMethod[] = [\n  \"post\",\n  \"put\",\n  \"patch\",\n  \"delete\",\n];\nconst validMutationMethods = new Set<MutationFormMethod>(\n  validMutationMethodsArr\n);\n\nconst validRequestMethodsArr: FormMethod[] = [\n  \"get\",\n  ...validMutationMethodsArr,\n];\nconst validRequestMethods = new Set<FormMethod>(validRequestMethodsArr);\n\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\n\nexport const IDLE_NAVIGATION: NavigationStates[\"Idle\"] = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n};\n\nexport const IDLE_FETCHER: FetcherStates[\"Idle\"] = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n};\n\nexport const IDLE_BLOCKER: BlockerUnblocked = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined,\n};\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\nconst isServer = !isBrowser;\n\nconst defaultMapRouteProperties: MapRoutePropertiesFunction = (route) => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary),\n});\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Create a router and listen to history POP navigations\n */\nexport function createRouter(init: RouterInit): Router {\n  invariant(\n    init.routes.length > 0,\n    \"You must provide a non-empty routes array to createRouter\"\n  );\n\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n\n  // Routes keyed by ID\n  let manifest: RouteManifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(\n    init.routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n  let inFlightDataRoutes: AgnosticDataRouteObject[] | undefined;\n  let basename = init.basename || \"/\";\n  // Config driven behavior flags\n  let future: FutureConfig = {\n    v7_normalizeFormMethod: false,\n    v7_prependBasename: false,\n    ...init.future,\n  };\n  // Cleanup function for history\n  let unlistenHistory: (() => void) | null = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set<RouterSubscriber>();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions: Record<string, number> | null = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey: GetScrollRestorationKeyFunction | null = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition: GetScrollPositionFunction | null = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialErrors: RouteData | null = null;\n\n  if (initialMatches == null) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname,\n    });\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = { [route.id]: error };\n  }\n\n  let initialized =\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    !initialMatches.some((m) => m.route.lazy) &&\n    // And we have to either have no loaders or have been provided hydrationData\n    (!initialMatches.some((m) => m.route.loader) || init.hydrationData != null);\n\n  let router: Router;\n  let state: RouterState = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: (init.hydrationData && init.hydrationData.loaderData) || {},\n    actionData: (init.hydrationData && init.hydrationData.actionData) || null,\n    errors: (init.hydrationData && init.hydrationData.errors) || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map(),\n  };\n\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction: HistoryAction = HistoryAction.Pop;\n\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n\n  // AbortController for the active navigation\n  let pendingNavigationController: AbortController | null;\n\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes: string[] = [];\n\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads: string[] = [];\n\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map<string, AbortController>();\n\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map<string, number>();\n\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set<string>();\n\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map<string, FetchLoadMatch>();\n\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map<string, DeferredData>();\n\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map<string, BlockerFunction>();\n\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let ignoreNextHistoryUpdate = false;\n\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(\n      ({ action: historyAction, location, delta }) => {\n        // Ignore this event if it was just us resetting the URL from a\n        // blocked POP navigation\n        if (ignoreNextHistoryUpdate) {\n          ignoreNextHistoryUpdate = false;\n          return;\n        }\n\n        warning(\n          blockerFunctions.size === 0 || delta != null,\n          \"You are trying to use a blocker on a POP navigation to a location \" +\n            \"that was not created by @remix-run/router. This will fail silently in \" +\n            \"production. This can happen if you are navigating outside the router \" +\n            \"via `window.history.pushState`/`window.location.hash` instead of using \" +\n            \"router navigation APIs.  This can also happen if you are using \" +\n            \"createHashRouter and the user manually changes the URL.\"\n        );\n\n        let blockerKey = shouldBlockNavigation({\n          currentLocation: state.location,\n          nextLocation: location,\n          historyAction,\n        });\n\n        if (blockerKey && delta != null) {\n          // Restore the URL to match the current UI, but don't update router state\n          ignoreNextHistoryUpdate = true;\n          init.history.go(delta * -1);\n\n          // Put the blocker into a blocked state\n          updateBlocker(blockerKey, {\n            state: \"blocked\",\n            location,\n            proceed() {\n              updateBlocker(blockerKey!, {\n                state: \"proceeding\",\n                proceed: undefined,\n                reset: undefined,\n                location,\n              });\n              // Re-do the same POP navigation we just blocked\n              init.history.go(delta);\n            },\n            reset() {\n              deleteBlocker(blockerKey!);\n              updateState({ blockers: new Map(router.state.blockers) });\n            },\n          });\n          return;\n        }\n\n        return startNavigation(historyAction, location);\n      }\n    );\n\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(HistoryAction.Pop, state.location);\n    }\n\n    return router;\n  }\n\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n\n  // Subscribe to state updates for the router\n  function subscribe(fn: RouterSubscriber) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n\n  // Update our state and notify the calling context of the change\n  function updateState(newState: Partial<RouterState>): void {\n    state = {\n      ...state,\n      ...newState,\n    };\n    subscribers.forEach((subscriber) => subscriber(state));\n  }\n\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(\n    location: Location,\n    newState: Partial<Omit<RouterState, \"action\" | \"location\" | \"navigation\">>\n  ): void {\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload =\n      state.actionData != null &&\n      state.navigation.formMethod != null &&\n      isMutationMethod(state.navigation.formMethod) &&\n      state.navigation.state === \"loading\" &&\n      location.state?._isRedirect !== true;\n\n    let actionData: RouteData | null;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData\n      ? mergeLoaderData(\n          state.loaderData,\n          newState.loaderData,\n          newState.matches || [],\n          newState.errors\n        )\n      : state.loaderData;\n\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    for (let [key] of blockerFunctions) {\n      deleteBlocker(key);\n    }\n\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset =\n      pendingPreventScrollReset === true ||\n      (state.navigation.formMethod != null &&\n        isMutationMethod(state.navigation.formMethod) &&\n        location.state?._isRedirect !== true);\n\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n\n    updateState({\n      ...newState, // matches, errors, fetchers go through as-is\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(\n        location,\n        newState.matches || state.matches\n      ),\n      preventScrollReset,\n      blockers: new Map(state.blockers),\n    });\n\n    if (isUninterruptedRevalidation) {\n      // If this was an uninterrupted revalidation then do not touch history\n    } else if (pendingAction === HistoryAction.Pop) {\n      // Do nothing for POP - URL has already been updated\n    } else if (pendingAction === HistoryAction.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === HistoryAction.Replace) {\n      init.history.replace(location, location.state);\n    }\n\n    // Reset stateful navigation vars\n    pendingAction = HistoryAction.Pop;\n    pendingPreventScrollReset = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n    cancelledFetcherLoads = [];\n  }\n\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(\n    to: number | To | null,\n    opts?: RouterNavigateOptions\n  ): Promise<void> {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      to,\n      opts?.fromRouteId,\n      opts?.relative\n    );\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      false,\n      normalizedPath,\n      opts\n    );\n\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = {\n      ...nextLocation,\n      ...init.history.encodeLocation(nextLocation),\n    };\n\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n\n    let historyAction = HistoryAction.Push;\n\n    if (userReplace === true) {\n      historyAction = HistoryAction.Replace;\n    } else if (userReplace === false) {\n      // no-op\n    } else if (\n      submission != null &&\n      isMutationMethod(submission.formMethod) &&\n      submission.formAction === state.location.pathname + state.location.search\n    ) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = HistoryAction.Replace;\n    }\n\n    let preventScrollReset =\n      opts && \"preventScrollReset\" in opts\n        ? opts.preventScrollReset === true\n        : undefined;\n\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction,\n    });\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey!, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation,\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          deleteBlocker(blockerKey!);\n          updateState({ blockers: new Map(state.blockers) });\n        },\n      });\n      return;\n    }\n\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n    });\n  }\n\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({ revalidation: \"loading\" });\n\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true,\n      });\n      return;\n    }\n\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(\n      pendingAction || state.historyAction,\n      state.navigation.location,\n      { overrideNavigation: state.navigation }\n    );\n  }\n\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(\n    historyAction: HistoryAction,\n    location: Location,\n    opts?: {\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      overrideNavigation?: Navigation;\n      pendingError?: ErrorResponse;\n      startUninterruptedRevalidation?: boolean;\n      preventScrollReset?: boolean;\n      replace?: boolean;\n    }\n  ): Promise<void> {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation =\n      (opts && opts.startUninterruptedRevalidation) === true;\n\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, basename);\n\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(routesToUse);\n      // Cancel all pending deferred on 404s since we don't keep any routes\n      cancelActiveDeferreds();\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error,\n        },\n      });\n      return;\n    }\n\n    // Short circuit if it's only a hash change and not a mutation submission\n    // For example, on /page#hash and submit a <Form method=\"post\"> which will\n    // default to a navigation to /page\n    if (\n      isHashChangeOnly(state.location, location) &&\n      !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))\n    ) {\n      completeNavigation(location, { matches });\n      return;\n    }\n\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(\n      init.history,\n      location,\n      pendingNavigationController.signal,\n      opts && opts.submission\n    );\n    let pendingActionData: RouteData | undefined;\n    let pendingError: RouteData | undefined;\n\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingError = {\n        [findNearestBoundary(matches).route.id]: opts.pendingError,\n      };\n    } else if (\n      opts &&\n      opts.submission &&\n      isMutationMethod(opts.submission.formMethod)\n    ) {\n      // Call action if we received an action submission\n      let actionOutput = await handleAction(\n        request,\n        location,\n        opts.submission,\n        matches,\n        { replace: opts.replace }\n      );\n\n      if (actionOutput.shortCircuited) {\n        return;\n      }\n\n      pendingActionData = actionOutput.pendingActionData;\n      pendingError = actionOutput.pendingActionError;\n\n      let navigation: NavigationStates[\"Loading\"] = {\n        state: \"loading\",\n        location,\n        ...opts.submission,\n      };\n      loadingNavigation = navigation;\n\n      // Create a GET request for the loaders\n      request = new Request(request.url, { signal: request.signal });\n    }\n\n    // Call loaders\n    let { shortCircuited, loaderData, errors } = await handleLoaders(\n      request,\n      location,\n      matches,\n      loadingNavigation,\n      opts && opts.submission,\n      opts && opts.fetcherSubmission,\n      opts && opts.replace,\n      pendingActionData,\n      pendingError\n    );\n\n    if (shortCircuited) {\n      return;\n    }\n\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n\n    completeNavigation(location, {\n      matches,\n      ...(pendingActionData ? { actionData: pendingActionData } : {}),\n      loaderData,\n      errors,\n    });\n  }\n\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(\n    request: Request,\n    location: Location,\n    submission: Submission,\n    matches: AgnosticDataRouteMatch[],\n    opts?: { replace?: boolean }\n  ): Promise<HandleActionResult> {\n    interruptActiveLoads();\n\n    // Put us in a submitting state\n    let navigation: NavigationStates[\"Submitting\"] = {\n      state: \"submitting\",\n      location,\n      ...submission,\n    };\n    updateState({ navigation });\n\n    // Call our action and get the result\n    let result: DataResult;\n    let actionMatch = getTargetMatch(matches, location);\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id,\n        }),\n      };\n    } else {\n      result = await callLoaderOrAction(\n        \"action\",\n        request,\n        actionMatch,\n        matches,\n        manifest,\n        mapRouteProperties,\n        basename\n      );\n\n      if (request.signal.aborted) {\n        return { shortCircuited: true };\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      let replace: boolean;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        replace =\n          result.location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(state, result, { submission, replace });\n      return { shortCircuited: true };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n\n      // By default, all submissions are REPLACE navigations, but if the\n      // action threw an error that'll be rendered in an errorElement, we fall\n      // back to PUSH so that the user can use the back button to get back to\n      // the pre-submission form location to try again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = HistoryAction.Push;\n      }\n\n      return {\n        // Send back an empty object we can use to clear out any prior actionData\n        pendingActionData: {},\n        pendingActionError: { [boundaryMatch.route.id]: result.error },\n      };\n    }\n\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    return {\n      pendingActionData: { [actionMatch.route.id]: result.data },\n    };\n  }\n\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    overrideNavigation?: Navigation,\n    submission?: Submission,\n    fetcherSubmission?: Submission,\n    replace?: boolean,\n    pendingActionData?: RouteData,\n    pendingError?: RouteData\n  ): Promise<HandleLoadersResult> {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation = overrideNavigation;\n    if (!loadingNavigation) {\n      let navigation: NavigationStates[\"Loading\"] = {\n        state: \"loading\",\n        location,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        ...submission,\n      };\n      loadingNavigation = navigation;\n    }\n\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission =\n      submission || fetcherSubmission\n        ? submission || fetcherSubmission\n        : loadingNavigation.formMethod &&\n          loadingNavigation.formAction &&\n          loadingNavigation.formData &&\n          loadingNavigation.formEncType\n        ? {\n            formMethod: loadingNavigation.formMethod,\n            formAction: loadingNavigation.formAction,\n            formData: loadingNavigation.formData,\n            formEncType: loadingNavigation.formEncType,\n          }\n        : undefined;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      activeSubmission,\n      location,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      fetchLoadMatches,\n      routesToUse,\n      basename,\n      pendingActionData,\n      pendingError\n    );\n\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(\n      (routeId) =>\n        !(matches && matches.some((m) => m.route.id === routeId)) ||\n        (matchesToLoad && matchesToLoad.some((m) => m.route.id === routeId))\n    );\n\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(location, {\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingError || null,\n        ...(pendingActionData ? { actionData: pendingActionData } : {}),\n        ...(updatedFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n      });\n      return { shortCircuited: true };\n    }\n\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    if (!isUninterruptedRevalidation) {\n      revalidatingFetchers.forEach((rf) => {\n        let fetcher = state.fetchers.get(rf.key);\n        let revalidatingFetcher: FetcherStates[\"Loading\"] = {\n          state: \"loading\",\n          data: fetcher && fetcher.data,\n          formMethod: undefined,\n          formAction: undefined,\n          formEncType: undefined,\n          formData: undefined,\n          \" _hasFetcherDoneAnything \": true,\n        };\n        state.fetchers.set(rf.key, revalidatingFetcher);\n      });\n      let actionData = pendingActionData || state.actionData;\n      updateState({\n        navigation: loadingNavigation,\n        ...(actionData\n          ? Object.keys(actionData).length === 0\n            ? { actionData: null }\n            : { actionData }\n          : {}),\n        ...(revalidatingFetchers.length > 0\n          ? { fetchers: new Map(state.fetchers) }\n          : {}),\n      });\n    }\n\n    pendingNavigationLoadId = ++incrementingLoadId;\n    revalidatingFetchers.forEach((rf) => {\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((f) => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n\n    let { results, loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        request\n      );\n\n    if (request.signal.aborted) {\n      return { shortCircuited: true };\n    }\n\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\n\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(results);\n    if (redirect) {\n      await startRedirectNavigation(state, redirect, { replace });\n      return { shortCircuited: true };\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      matchesToLoad,\n      loaderResults,\n      pendingError,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe((aborted) => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers =\n      updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n\n    return {\n      loaderData,\n      errors,\n      ...(shouldUpdateFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n    };\n  }\n\n  function getFetcher<TData = any>(key: string): Fetcher<TData> {\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ) {\n    if (isServer) {\n      throw new Error(\n        \"router.fetch() was called during the server render, but it shouldn't be. \" +\n          \"You are likely calling a useFetcher() method in the body of your component. \" +\n          \"Try moving it to a useEffect or a callback.\"\n      );\n    }\n\n    if (fetchControllers.has(key)) abortFetcher(key);\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      href,\n      routeId,\n      opts?.relative\n    );\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n\n    if (!matches) {\n      setFetcherError(\n        key,\n        routeId,\n        getInternalRouterError(404, { pathname: normalizedPath })\n      );\n      return;\n    }\n\n    let { path, submission } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      true,\n      normalizedPath,\n      opts\n    );\n    let match = getTargetMatch(matches, path);\n\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, submission);\n      return;\n    }\n\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, { routeId, path });\n    handleFetcherLoader(key, routeId, path, match, matches, submission);\n  }\n\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    requestMatches: AgnosticDataRouteMatch[],\n    submission: Submission\n  ) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n\n    if (!match.route.action && !match.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: submission.formMethod,\n        pathname: path,\n        routeId: routeId,\n      });\n      setFetcherError(key, routeId, error);\n      return;\n    }\n\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    let fetcher: FetcherStates[\"Submitting\"] = {\n      state: \"submitting\",\n      ...submission,\n      data: existingFetcher && existingFetcher.data,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    state.fetchers.set(key, fetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    // Call the action for the fetcher\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal,\n      submission\n    );\n    fetchControllers.set(key, abortController);\n\n    let actionResult = await callLoaderOrAction(\n      \"action\",\n      fetchRequest,\n      match,\n      requestMatches,\n      manifest,\n      mapRouteProperties,\n      basename\n    );\n\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by ou our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n\n    if (isRedirectResult(actionResult)) {\n      fetchControllers.delete(key);\n      fetchRedirectIds.add(key);\n      let loadingFetcher: FetcherStates[\"Loading\"] = {\n        state: \"loading\",\n        ...submission,\n        data: undefined,\n        \" _hasFetcherDoneAnything \": true,\n      };\n      state.fetchers.set(key, loadingFetcher);\n      updateState({ fetchers: new Map(state.fetchers) });\n\n      return startRedirectNavigation(state, actionResult, {\n        submission,\n        isFetchActionRedirect: true,\n      });\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(actionResult)) {\n      setFetcherError(key, routeId, actionResult.error);\n      return;\n    }\n\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(\n      init.history,\n\n      nextLocation,\n      abortController.signal\n    );\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches =\n      state.navigation.state !== \"idle\"\n        ? matchRoutes(routesToUse, state.navigation.location, basename)\n        : state.matches;\n\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n\n    let loadFetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      data: actionResult.data,\n      ...submission,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    state.fetchers.set(key, loadFetcher);\n\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      submission,\n      nextLocation,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      fetchLoadMatches,\n      routesToUse,\n      basename,\n      { [match.route.id]: actionResult.data },\n      undefined // No need to send through errors since we short circuit above\n    );\n\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers\n      .filter((rf) => rf.key !== key)\n      .forEach((rf) => {\n        let staleKey = rf.key;\n        let existingFetcher = state.fetchers.get(staleKey);\n        let revalidatingFetcher: FetcherStates[\"Loading\"] = {\n          state: \"loading\",\n          data: existingFetcher && existingFetcher.data,\n          formMethod: undefined,\n          formAction: undefined,\n          formEncType: undefined,\n          formData: undefined,\n          \" _hasFetcherDoneAnything \": true,\n        };\n        state.fetchers.set(staleKey, revalidatingFetcher);\n        if (rf.controller) {\n          fetchControllers.set(staleKey, rf.controller);\n        }\n      });\n\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));\n\n    abortController.signal.addEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    let { results, loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        revalidationRequest\n      );\n\n    if (abortController.signal.aborted) {\n      return;\n    }\n\n    abortController.signal.removeEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\n\n    let redirect = findRedirect(results);\n    if (redirect) {\n      return startRedirectNavigation(state, redirect);\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      state.matches,\n      matchesToLoad,\n      loaderResults,\n      undefined,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    let doneFetcher: FetcherStates[\"Idle\"] = {\n      state: \"idle\",\n      data: actionResult.data,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    state.fetchers.set(key, doneFetcher);\n\n    let didAbortFetchLoads = abortStaleFetchLoads(loadId);\n\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (\n      state.navigation.state === \"loading\" &&\n      loadId > pendingNavigationLoadId\n    ) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers),\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(\n          state.loaderData,\n          loaderData,\n          matches,\n          errors\n        ),\n        ...(didAbortFetchLoads ? { fetchers: new Map(state.fetchers) } : {}),\n      });\n      isRevalidationRequired = false;\n    }\n  }\n\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    matches: AgnosticDataRouteMatch[],\n    submission?: Submission\n  ) {\n    let existingFetcher = state.fetchers.get(key);\n    // Put this fetcher into it's loading state\n    let loadingFetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      ...submission,\n      data: existingFetcher && existingFetcher.data,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    state.fetchers.set(key, loadingFetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    // Call the loader for this fetcher route match\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal\n    );\n    fetchControllers.set(key, abortController);\n\n    let result: DataResult = await callLoaderOrAction(\n      \"loader\",\n      fetchRequest,\n      match,\n      matches,\n      manifest,\n      mapRouteProperties,\n      basename\n    );\n\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result =\n        (await resolveDeferredData(result, fetchRequest.signal, true)) ||\n        result;\n    }\n\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      fetchRedirectIds.add(key);\n      await startRedirectNavigation(state, result);\n      return;\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, routeId);\n      state.fetchers.delete(key);\n      // TODO: In remix, this would reset to IDLE_NAVIGATION if it was a catch -\n      // do we need to behave any differently with our non-redirect errors?\n      // What if it was a non-redirect Response?\n      updateState({\n        fetchers: new Map(state.fetchers),\n        errors: {\n          [boundaryMatch.route.id]: result.error,\n        },\n      });\n      return;\n    }\n\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n\n    // Put the fetcher back into an idle state\n    let doneFetcher: FetcherStates[\"Idle\"] = {\n      state: \"idle\",\n      data: result.data,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    state.fetchers.set(key, doneFetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n  }\n\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(\n    state: RouterState,\n    redirect: RedirectResult,\n    {\n      submission,\n      replace,\n      isFetchActionRedirect,\n    }: {\n      submission?: Submission;\n      replace?: boolean;\n      isFetchActionRedirect?: boolean;\n    } = {}\n  ) {\n    if (redirect.revalidate) {\n      isRevalidationRequired = true;\n    }\n\n    let redirectLocation = createLocation(\n      state.location,\n      redirect.location,\n      // TODO: This can be removed once we get rid of useTransition in Remix v2\n      {\n        _isRedirect: true,\n        ...(isFetchActionRedirect ? { _isFetchActionRedirect: true } : {}),\n      }\n    );\n    invariant(\n      redirectLocation,\n      \"Expected a location on the redirect navigation\"\n    );\n    // Check if this an absolute external redirect that goes to a new origin\n    if (\n      ABSOLUTE_URL_REGEX.test(redirect.location) &&\n      isBrowser &&\n      typeof window?.location !== \"undefined\"\n    ) {\n      let url = init.history.createURL(redirect.location);\n      let isDifferentBasename = stripBasename(url.pathname, basename) == null;\n\n      if (window.location.origin !== url.origin || isDifferentBasename) {\n        if (replace) {\n          window.location.replace(redirect.location);\n        } else {\n          window.location.assign(redirect.location);\n        }\n        return;\n      }\n    }\n\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n\n    let redirectHistoryAction =\n      replace === true ? HistoryAction.Replace : HistoryAction.Push;\n\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let { formMethod, formAction, formEncType, formData } = state.navigation;\n    if (!submission && formMethod && formAction && formData && formEncType) {\n      submission = {\n        formMethod,\n        formAction,\n        formEncType,\n        formData,\n      };\n    }\n\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    if (\n      redirectPreserveMethodStatusCodes.has(redirect.status) &&\n      submission &&\n      isMutationMethod(submission.formMethod)\n    ) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: {\n          ...submission,\n          formAction: redirect.location,\n        },\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    } else if (isFetchActionRedirect) {\n      // For a fetch action redirect, we kick off a new loading navigation\n      // without the fetcher submission, but we send it along for shouldRevalidate\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation: {\n          state: \"loading\",\n          location: redirectLocation,\n          formMethod: undefined,\n          formAction: undefined,\n          formEncType: undefined,\n          formData: undefined,\n        },\n        fetcherSubmission: submission,\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    } else {\n      // Otherwise, we kick off a new loading navigation, preserving the\n      // submission info for the duration of this navigation\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation: {\n          state: \"loading\",\n          location: redirectLocation,\n          formMethod: submission ? submission.formMethod : undefined,\n          formAction: submission ? submission.formAction : undefined,\n          formEncType: submission ? submission.formEncType : undefined,\n          formData: submission ? submission.formData : undefined,\n        },\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    }\n  }\n\n  async function callLoadersAndMaybeResolveData(\n    currentMatches: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[],\n    matchesToLoad: AgnosticDataRouteMatch[],\n    fetchersToLoad: RevalidatingFetcher[],\n    request: Request\n  ) {\n    // Call all navigation loaders and revalidating fetcher loaders in parallel,\n    // then slice off the results into separate arrays so we can handle them\n    // accordingly\n    let results = await Promise.all([\n      ...matchesToLoad.map((match) =>\n        callLoaderOrAction(\n          \"loader\",\n          request,\n          match,\n          matches,\n          manifest,\n          mapRouteProperties,\n          basename\n        )\n      ),\n      ...fetchersToLoad.map((f) => {\n        if (f.matches && f.match && f.controller) {\n          return callLoaderOrAction(\n            \"loader\",\n            createClientSideRequest(init.history, f.path, f.controller.signal),\n            f.match,\n            f.matches,\n            manifest,\n            mapRouteProperties,\n            basename\n          );\n        } else {\n          let error: ErrorResult = {\n            type: ResultType.error,\n            error: getInternalRouterError(404, { pathname: f.path }),\n          };\n          return error;\n        }\n      }),\n    ]);\n    let loaderResults = results.slice(0, matchesToLoad.length);\n    let fetcherResults = results.slice(matchesToLoad.length);\n\n    await Promise.all([\n      resolveDeferredResults(\n        currentMatches,\n        matchesToLoad,\n        loaderResults,\n        loaderResults.map(() => request.signal),\n        false,\n        state.loaderData\n      ),\n      resolveDeferredResults(\n        currentMatches,\n        fetchersToLoad.map((f) => f.match),\n        fetcherResults,\n        fetchersToLoad.map((f) => (f.controller ? f.controller.signal : null)),\n        true\n      ),\n    ]);\n\n    return { results, loaderResults, fetcherResults };\n  }\n\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.push(key);\n        abortFetcher(key);\n      }\n    });\n  }\n\n  function setFetcherError(key: string, routeId: string, error: any) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error,\n      },\n      fetchers: new Map(state.fetchers),\n    });\n  }\n\n  function deleteFetcher(key: string): void {\n    if (fetchControllers.has(key)) abortFetcher(key);\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    state.fetchers.delete(key);\n  }\n\n  function abortFetcher(key: string) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, `Expected fetch controller: ${key}`);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n\n  function markFetchersDone(keys: string[]) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher: FetcherStates[\"Idle\"] = {\n        state: \"idle\",\n        data: fetcher.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        \" _hasFetcherDoneAnything \": true,\n      };\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  function markFetchRedirectsDone(): boolean {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n\n  function abortStaleFetchLoads(landedId: number): boolean {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n\n  function getBlocker(key: string, fn: BlockerFunction) {\n    let blocker: Blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n\n    return blocker;\n  }\n\n  function deleteBlocker(key: string) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key: string, newBlocker: Blocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(\n      (blocker.state === \"unblocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"proceeding\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"unblocked\") ||\n        (blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\"),\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\n    );\n\n    state.blockers.set(key, newBlocker);\n    updateState({ blockers: new Map(state.blockers) });\n  }\n\n  function shouldBlockNavigation({\n    currentLocation,\n    nextLocation,\n    historyAction,\n  }: {\n    currentLocation: Location;\n    nextLocation: Location;\n    historyAction: HistoryAction;\n  }): string | undefined {\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\n      return blockerKey;\n    }\n  }\n\n  function cancelActiveDeferreds(\n    predicate?: (routeId: string) => boolean\n  ): string[] {\n    let cancelledRouteIds: string[] = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(\n    positions: Record<string, number>,\n    getPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || ((location) => location.key);\n\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({ restoreScrollPosition: y });\n      }\n    }\n\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n\n  function saveScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): void {\n    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {\n      let userMatches = matches.map((m) =>\n        createUseMatchesMatch(m, state.loaderData)\n      );\n      let key = getScrollRestorationKey(location, userMatches) || location.key;\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n\n  function getSavedScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): number | null {\n    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {\n      let userMatches = matches.map((m) =>\n        createUseMatchesMatch(m, state.loaderData)\n      );\n      let key = getScrollRestorationKey(location, userMatches) || location.key;\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n\n  function _internalSetRoutes(newRoutes: AgnosticDataRouteObject[]) {\n    inFlightDataRoutes = newRoutes;\n  }\n\n  router = {\n    get basename() {\n      return basename;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: (to: To) => init.history.createHref(to),\n    encodeLocation: (to: To) => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes,\n  };\n\n  return router;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\n\nexport const UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\n\nexport interface CreateStaticHandlerOptions {\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n}\n\nexport function createStaticHandler(\n  routes: AgnosticRouteObject[],\n  opts?: CreateStaticHandlerOptions\n): StaticHandler {\n  invariant(\n    routes.length > 0,\n    \"You must provide a non-empty routes array to createStaticHandler\"\n  );\n\n  let manifest: RouteManifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (opts?.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts?.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n\n  let dataRoutes = convertRoutesToDataRoutes(\n    routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   */\n  async function query(\n    request: Request,\n    { requestContext }: { requestContext?: unknown } = {}\n  ): Promise<StaticHandlerContext | Response> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, { method });\n      let { matches: methodNotAllowedMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let result = await queryImpl(request, location, matches, requestContext);\n    if (isResponse(result)) {\n      return result;\n    }\n\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return { location, basename, ...result };\n  }\n\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   */\n  async function queryRoute(\n    request: Request,\n    {\n      routeId,\n      requestContext,\n    }: { requestContext?: unknown; routeId?: string } = {}\n  ): Promise<any> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, { method });\n    } else if (!matches) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let match = routeId\n      ? matches.find((m) => m.route.id === routeId)\n      : getTargetMatch(matches, location);\n\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId,\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      match\n    );\n    if (isResponse(result)) {\n      return result;\n    }\n\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n\n    if (result.loaderData) {\n      let data = Object.values(result.loaderData)[0];\n      if (result.activeDeferreds?.[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n\n    return undefined;\n  }\n\n  async function queryImpl(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    routeMatch?: AgnosticDataRouteMatch\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    invariant(\n      request.signal,\n      \"query()/queryRoute() requests must contain an AbortController signal\"\n    );\n\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(\n          request,\n          matches,\n          routeMatch || getTargetMatch(matches, location),\n          requestContext,\n          routeMatch != null\n        );\n        return result;\n      }\n\n      let result = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        routeMatch\n      );\n      return isResponse(result)\n        ? result\n        : {\n            ...result,\n            actionData: null,\n            actionHeaders: {},\n          };\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction, we throw\n      // it to bail out and then return or throw here based on whether the user\n      // returned or threw\n      if (isQueryRouteResponse(e)) {\n        if (e.type === ResultType.error && !isRedirectResponse(e.response)) {\n          throw e.response;\n        }\n        return e.response;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n\n  async function submit(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    actionMatch: AgnosticDataRouteMatch,\n    requestContext: unknown,\n    isRouteRequest: boolean\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    let result: DataResult;\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id,\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    } else {\n      result = await callLoaderOrAction(\n        \"action\",\n        request,\n        actionMatch,\n        matches,\n        manifest,\n        mapRouteProperties,\n        basename,\n        true,\n        isRouteRequest,\n        requestContext\n      );\n\n      if (request.signal.aborted) {\n        let method = isRouteRequest ? \"queryRoute\" : \"query\";\n        throw new Error(`${method}() call aborted`);\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.status,\n        headers: {\n          Location: result.location,\n        },\n      });\n    }\n\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, { type: \"defer-action\" });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    }\n\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: { [actionMatch.route.id]: result.data },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        undefined,\n        {\n          [boundaryMatch.route.id]: result.error,\n        }\n      );\n\n      // action status codes take precedence over loader status codes\n      return {\n        ...context,\n        statusCode: isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500,\n        actionData: null,\n        actionHeaders: {\n          ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n        },\n      };\n    }\n\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal,\n    });\n    let context = await loadRouteData(loaderRequest, matches, requestContext);\n\n    return {\n      ...context,\n      // action status codes take precedence over loader status codes\n      ...(result.statusCode ? { statusCode: result.statusCode } : {}),\n      actionData: {\n        [actionMatch.route.id]: result.data,\n      },\n      actionHeaders: {\n        ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n      },\n    };\n  }\n\n  async function loadRouteData(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    routeMatch?: AgnosticDataRouteMatch,\n    pendingActionError?: RouteData\n  ): Promise<\n    | Omit<\n        StaticHandlerContext,\n        \"location\" | \"basename\" | \"actionData\" | \"actionHeaders\"\n      >\n    | Response\n  > {\n    let isRouteRequest = routeMatch != null;\n\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (\n      isRouteRequest &&\n      !routeMatch?.route.loader &&\n      !routeMatch?.route.lazy\n    ) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch?.route.id,\n      });\n    }\n\n    let requestMatches = routeMatch\n      ? [routeMatch]\n      : getLoaderMatchesUntilBoundary(\n          matches,\n          Object.keys(pendingActionError || {})[0]\n        );\n    let matchesToLoad = requestMatches.filter(\n      (m) => m.route.loader || m.route.lazy\n    );\n\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce(\n          (acc, m) => Object.assign(acc, { [m.route.id]: null }),\n          {}\n        ),\n        errors: pendingActionError || null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let results = await Promise.all([\n      ...matchesToLoad.map((match) =>\n        callLoaderOrAction(\n          \"loader\",\n          request,\n          match,\n          matches,\n          manifest,\n          mapRouteProperties,\n          basename,\n          true,\n          isRouteRequest,\n          requestContext\n        )\n      ),\n    ]);\n\n    if (request.signal.aborted) {\n      let method = isRouteRequest ? \"queryRoute\" : \"query\";\n      throw new Error(`${method}() call aborted`);\n    }\n\n    // Process and commit output from loaders\n    let activeDeferreds = new Map<string, DeferredData>();\n    let context = processRouteLoaderData(\n      matches,\n      matchesToLoad,\n      results,\n      pendingActionError,\n      activeDeferreds\n    );\n\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set<string>(\n      matchesToLoad.map((match) => match.route.id)\n    );\n    matches.forEach((match) => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n\n    return {\n      ...context,\n      matches,\n      activeDeferreds:\n        activeDeferreds.size > 0\n          ? Object.fromEntries(activeDeferreds.entries())\n          : null,\n    };\n  }\n\n  return {\n    dataRoutes,\n    query,\n    queryRoute,\n  };\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nexport function getStaticContextFromError(\n  routes: AgnosticDataRouteObject[],\n  context: StaticHandlerContext,\n  error: any\n) {\n  let newContext: StaticHandlerContext = {\n    ...context,\n    statusCode: 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error,\n    },\n  };\n  return newContext;\n}\n\nfunction isSubmissionNavigation(\n  opts: RouterNavigateOptions\n): opts is SubmissionNavigateOptions {\n  return opts != null && \"formData\" in opts;\n}\n\nfunction normalizeTo(\n  location: Path,\n  matches: AgnosticDataRouteMatch[],\n  basename: string,\n  prependBasename: boolean,\n  to: To | null,\n  fromRouteId?: string,\n  relative?: RelativeRoutingType\n) {\n  let contextualMatches: AgnosticDataRouteMatch[];\n  let activeRouteMatch: AgnosticDataRouteMatch | undefined;\n  if (fromRouteId != null && relative !== \"path\") {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route.  When using relative:path,\n    // fromRouteId is ignored since that is always relative to the current\n    // location path\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n\n  // Resolve the relative path\n  let path = resolveTo(\n    to ? to : \".\",\n    getPathContributingMatches(contextualMatches).map((m) => m.pathnameBase),\n    stripBasename(location.pathname, basename) || location.pathname,\n    relative === \"path\"\n  );\n\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n\n  // Add an ?index param for matched index routes if we don't already have one\n  if (\n    (to == null || to === \"\" || to === \".\") &&\n    activeRouteMatch &&\n    activeRouteMatch.route.index &&\n    !hasNakedIndexQuery(path.search)\n  ) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(\n  normalizeFormMethod: boolean,\n  isFetcher: boolean,\n  path: string,\n  opts?: RouterNavigateOptions\n): {\n  path: string;\n  submission?: Submission;\n  error?: ErrorResponse;\n} {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return { path };\n  }\n\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, { method: opts.formMethod }),\n    };\n  }\n\n  // Create a Submission on non-GET navigations\n  let submission: Submission | undefined;\n  if (opts.formData) {\n    let formMethod = opts.formMethod || \"get\";\n    submission = {\n      formMethod: normalizeFormMethod\n        ? (formMethod.toUpperCase() as V7_FormMethod)\n        : (formMethod.toLowerCase() as FormMethod),\n      formAction: stripHashFromPath(path),\n      formEncType:\n        (opts && opts.formEncType) || \"application/x-www-form-urlencoded\",\n      formData: opts.formData,\n    };\n\n    if (isMutationMethod(submission.formMethod)) {\n      return { path, submission };\n    }\n  }\n\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  let searchParams = convertFormDataToSearchParams(opts.formData);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = `?${searchParams}`;\n\n  return { path: createPath(parsedPath), submission };\n}\n\n// Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(\n  matches: AgnosticDataRouteMatch[],\n  boundaryId?: string\n) {\n  let boundaryMatches = matches;\n  if (boundaryId) {\n    let index = matches.findIndex((m) => m.route.id === boundaryId);\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n  return boundaryMatches;\n}\n\nfunction getMatchesToLoad(\n  history: History,\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  submission: Submission | undefined,\n  location: Location,\n  isRevalidationRequired: boolean,\n  cancelledDeferredRoutes: string[],\n  cancelledFetcherLoads: string[],\n  fetchLoadMatches: Map<string, FetchLoadMatch>,\n  routesToUse: AgnosticDataRouteObject[],\n  basename: string | undefined,\n  pendingActionData?: RouteData,\n  pendingError?: RouteData\n): [AgnosticDataRouteMatch[], RevalidatingFetcher[]] {\n  let actionResult = pendingError\n    ? Object.values(pendingError)[0]\n    : pendingActionData\n    ? Object.values(pendingActionData)[0]\n    : undefined;\n\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryId = pendingError ? Object.keys(pendingError)[0] : undefined;\n  let boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);\n\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    if (match.route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n    if (match.route.loader == null) {\n      return false;\n    }\n\n    // Always call the loader on new route instances and pending defer cancellations\n    if (\n      isNewLoader(state.loaderData, state.matches[index], match) ||\n      cancelledDeferredRoutes.some((id) => id === match.route.id)\n    ) {\n      return true;\n    }\n\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n\n    return shouldRevalidateLoader(match, {\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params,\n      ...submission,\n      actionResult,\n      defaultShouldRevalidate:\n        // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n        isRevalidationRequired ||\n        // Clicked the same link, resubmitted a GET form\n        currentUrl.pathname + currentUrl.search ===\n          nextUrl.pathname + nextUrl.search ||\n        // Search params affect all loaders\n        currentUrl.search !== nextUrl.search ||\n        isNewRouteInstance(currentRouteMatch, nextRouteMatch),\n    });\n  });\n\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers: RevalidatingFetcher[] = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate if fetcher won't be present in the subsequent render\n    if (!matches.some((m) => m.route.id === f.routeId)) {\n      return;\n    }\n\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null,\n      });\n      return;\n    }\n\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n\n    if (cancelledFetcherLoads.includes(key)) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController(),\n      });\n      return;\n    }\n\n    // Revalidating fetchers are decoupled from the route matches since they\n    // hit a static href, so they _always_ check shouldRevalidate and the\n    // default is strictly if a revalidation is explicitly required (action\n    // submissions, useRevalidator, X-Remix-Revalidate).\n    let shouldRevalidate = shouldRevalidateLoader(fetcherMatch, {\n      currentUrl,\n      currentParams: state.matches[state.matches.length - 1].params,\n      nextUrl,\n      nextParams: matches[matches.length - 1].params,\n      ...submission,\n      actionResult,\n      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n      defaultShouldRevalidate: isRevalidationRequired,\n    });\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController(),\n      });\n    }\n  });\n\n  return [navigationMatches, revalidatingFetchers];\n}\n\nfunction isNewLoader(\n  currentLoaderData: RouteData,\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let isNew =\n    // [a] -> [a, b]\n    !currentMatch ||\n    // [a, b] -> [a, c]\n    match.route.id !== currentMatch.route.id;\n\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\n\nfunction isNewRouteInstance(\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    (currentPath != null &&\n      currentPath.endsWith(\"*\") &&\n      currentMatch.params[\"*\"] !== match.params[\"*\"])\n  );\n}\n\nfunction shouldRevalidateLoader(\n  loaderMatch: AgnosticDataRouteMatch,\n  arg: Parameters<ShouldRevalidateFunction>[0]\n) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n\n  return arg.defaultShouldRevalidate;\n}\n\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(\n  route: AgnosticDataRouteObject,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  manifest: RouteManifest\n) {\n  if (!route.lazy) {\n    return;\n  }\n\n  let lazyRoute = await route.lazy();\n\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates: Record<string, any> = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue =\n      routeToUpdate[lazyRouteProperty as keyof typeof routeToUpdate];\n\n    let isPropertyStaticallyDefined =\n      staticRouteValue !== undefined &&\n      // This property isn't static since it should always be updated based\n      // on the route updates\n      lazyRouteProperty !== \"hasErrorBoundary\";\n\n    warning(\n      !isPropertyStaticallyDefined,\n      `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" ` +\n        `defined but its lazy function is also returning a value for this property. ` +\n        `The lazy route property \"${lazyRouteProperty}\" will be ignored.`\n    );\n\n    if (\n      !isPropertyStaticallyDefined &&\n      !immutableRouteKeys.has(lazyRouteProperty as ImmutableRouteKey)\n    ) {\n      routeUpdates[lazyRouteProperty] =\n        lazyRoute[lazyRouteProperty as keyof typeof lazyRoute];\n    }\n  }\n\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, {\n    // To keep things framework agnostic, we use the provided\n    // `mapRouteProperties` (or wrapped `detectErrorBoundary`) function to\n    // set the framework-aware properties (`element`/`hasErrorBoundary`) since\n    // the logic will differ between frameworks.\n    ...mapRouteProperties(routeToUpdate),\n    lazy: undefined,\n  });\n}\n\nasync function callLoaderOrAction(\n  type: \"loader\" | \"action\",\n  request: Request,\n  match: AgnosticDataRouteMatch,\n  matches: AgnosticDataRouteMatch[],\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  basename: string,\n  isStaticRequest: boolean = false,\n  isRouteRequest: boolean = false,\n  requestContext?: unknown\n): Promise<DataResult> {\n  let resultType;\n  let result;\n  let onReject: (() => void) | undefined;\n\n  let runHandler = (handler: ActionFunction | LoaderFunction) => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject: () => void;\n    let abortPromise = new Promise((_, r) => (reject = r));\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    return Promise.race([\n      handler({ request, params: match.params, context: requestContext }),\n      abortPromise,\n    ]);\n  };\n\n  try {\n    let handler = match.route[type];\n\n    if (match.route.lazy) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let values = await Promise.all([\n          runHandler(handler),\n          loadLazyRouteModule(match.route, mapRouteProperties, manifest),\n        ]);\n        result = values[0];\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadLazyRouteModule(match.route, mapRouteProperties, manifest);\n\n        handler = match.route[type];\n        if (handler) {\n          // Handler still run even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id,\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return { type: ResultType.data, data: undefined };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname,\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n\n    invariant(\n      result !== undefined,\n      `You defined ${type === \"action\" ? \"an action\" : \"a loader\"} for route ` +\n        `\"${match.route.id}\" but didn't return anything from your \\`${type}\\` ` +\n        `function. Please return a value or \\`null\\`.`\n    );\n  } catch (e) {\n    resultType = ResultType.error;\n    result = e;\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n\n  if (isResponse(result)) {\n    let status = result.status;\n\n    // Process redirects\n    if (redirectStatusCodes.has(status)) {\n      let location = result.headers.get(\"Location\");\n      invariant(\n        location,\n        \"Redirects returned/thrown from loaders/actions must have a Location header\"\n      );\n\n      // Support relative routing in internal redirects\n      if (!ABSOLUTE_URL_REGEX.test(location)) {\n        location = normalizeTo(\n          new URL(request.url),\n          matches.slice(0, matches.indexOf(match) + 1),\n          basename,\n          true,\n          location\n        );\n      } else if (!isStaticRequest) {\n        // Strip off the protocol+origin for same-origin + same-basename absolute\n        // redirects. If this is a static request, we can let it go back to the\n        // browser as-is\n        let currentUrl = new URL(request.url);\n        let url = location.startsWith(\"//\")\n          ? new URL(currentUrl.protocol + location)\n          : new URL(location);\n        let isSameBasename = stripBasename(url.pathname, basename) != null;\n        if (url.origin === currentUrl.origin && isSameBasename) {\n          location = url.pathname + url.search + url.hash;\n        }\n      }\n\n      // Don't process redirects in the router during static requests requests.\n      // Instead, throw the Response and let the server handle it with an HTTP\n      // redirect.  We also update the Location header in place in this flow so\n      // basename and relative routing is taken into account\n      if (isStaticRequest) {\n        result.headers.set(\"Location\", location);\n        throw result;\n      }\n\n      return {\n        type: ResultType.redirect,\n        status,\n        location,\n        revalidate: result.headers.get(\"X-Remix-Revalidate\") !== null,\n      };\n    }\n\n    // For SSR single-route requests, we want to hand Responses back directly\n    // without unwrapping.  We do this with the QueryRouteResponse wrapper\n    // interface so we can know whether it was returned or thrown\n    if (isRouteRequest) {\n      // eslint-disable-next-line no-throw-literal\n      throw {\n        type: resultType || ResultType.data,\n        response: result,\n      };\n    }\n\n    let data: any;\n    let contentType = result.headers.get(\"Content-Type\");\n    // Check between word boundaries instead of startsWith() due to the last\n    // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      data = await result.json();\n    } else {\n      data = await result.text();\n    }\n\n    if (resultType === ResultType.error) {\n      return {\n        type: resultType,\n        error: new ErrorResponse(status, result.statusText, data),\n        headers: result.headers,\n      };\n    }\n\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers,\n    };\n  }\n\n  if (resultType === ResultType.error) {\n    return { type: resultType, error: result };\n  }\n\n  if (isDeferredData(result)) {\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: result.init?.status,\n      headers: result.init?.headers && new Headers(result.init.headers),\n    };\n  }\n\n  return { type: ResultType.data, data: result };\n}\n\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(\n  history: History,\n  location: string | Location,\n  signal: AbortSignal,\n  submission?: Submission\n): Request {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init: RequestInit = { signal };\n\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let { formMethod, formEncType, formData } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n    init.body =\n      formEncType === \"application/x-www-form-urlencoded\"\n        ? convertFormDataToSearchParams(formData)\n        : formData;\n  }\n\n  // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n  return new Request(url, init);\n}\n\nfunction convertFormDataToSearchParams(formData: FormData): URLSearchParams {\n  let searchParams = new URLSearchParams();\n\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, value instanceof File ? value.name : value);\n  }\n\n  return searchParams;\n}\n\nfunction processRouteLoaderData(\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingError: RouteData | undefined,\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors: RouterState[\"errors\"] | null;\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n} {\n  // Fill in loaderData/errors from our loaders\n  let loaderData: RouterState[\"loaderData\"] = {};\n  let errors: RouterState[\"errors\"] | null = null;\n  let statusCode: number | undefined;\n  let foundError = false;\n  let loaderHeaders: Record<string, Headers> = {};\n\n  // Process loader results into state.loaderData/state.errors\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(\n      !isRedirectResult(result),\n      \"Cannot handle redirect results in processLoaderData\"\n    );\n    if (isErrorResult(result)) {\n      // Look upwards from the matched route for the closest ancestor\n      // error boundary, defaulting to the root match\n      let boundaryMatch = findNearestBoundary(matches, id);\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError) {\n        error = Object.values(pendingError)[0];\n        pendingError = undefined;\n      }\n\n      errors = errors || {};\n\n      // Prefer higher error values if lower errors bubble to the same boundary\n      if (errors[boundaryMatch.route.id] == null) {\n        errors[boundaryMatch.route.id] = error;\n      }\n\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n      } else {\n        loaderData[id] = result.data;\n      }\n\n      // Error status codes always override success status codes, but if all\n      // loaders are successful we take the deepest status code.\n      if (\n        result.statusCode != null &&\n        result.statusCode !== 200 &&\n        !foundError\n      ) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError) {\n    errors = pendingError;\n    loaderData[Object.keys(pendingError)[0]] = undefined;\n  }\n\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders,\n  };\n}\n\nfunction processLoaderData(\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingError: RouteData | undefined,\n  revalidatingFetchers: RevalidatingFetcher[],\n  fetcherResults: DataResult[],\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors?: RouterState[\"errors\"];\n} {\n  let { loaderData, errors } = processRouteLoaderData(\n    matches,\n    matchesToLoad,\n    results,\n    pendingError,\n    activeDeferreds\n  );\n\n  // Process results from our revalidating fetchers\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let { key, match, controller } = revalidatingFetchers[index];\n    invariant(\n      fetcherResults !== undefined && fetcherResults[index] !== undefined,\n      \"Did not find corresponding fetcher result\"\n    );\n    let result = fetcherResults[index];\n\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      continue;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error,\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher: FetcherStates[\"Idle\"] = {\n        state: \"idle\",\n        data: result.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        \" _hasFetcherDoneAnything \": true,\n      };\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  return { loaderData, errors };\n}\n\nfunction mergeLoaderData(\n  loaderData: RouteData,\n  newLoaderData: RouteData,\n  matches: AgnosticDataRouteMatch[],\n  errors: RouteData | null | undefined\n): RouteData {\n  let mergedLoaderData = { ...newLoaderData };\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      } else {\n        // No-op - this is so we ignore existing data if we have a key in the\n        // incoming object with an undefined value, which is how we unset a prior\n        // loaderData if we encounter a loader error\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\n\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(\n  matches: AgnosticDataRouteMatch[],\n  routeId?: string\n): AgnosticDataRouteMatch {\n  let eligibleMatches = routeId\n    ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1)\n    : [...matches];\n  return (\n    eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) ||\n    matches[0]\n  );\n}\n\nfunction getShortCircuitMatches(routes: AgnosticDataRouteObject[]): {\n  matches: AgnosticDataRouteMatch[];\n  route: AgnosticDataRouteObject;\n} {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.find((r) => r.index || !r.path || r.path === \"/\") || {\n    id: `__shim-error-route__`,\n  };\n\n  return {\n    matches: [\n      {\n        params: {},\n        pathname: \"\",\n        pathnameBase: \"\",\n        route,\n      },\n    ],\n    route,\n  };\n}\n\nfunction getInternalRouterError(\n  status: number,\n  {\n    pathname,\n    routeId,\n    method,\n    type,\n  }: {\n    pathname?: string;\n    routeId?: string;\n    method?: string;\n    type?: \"defer-action\";\n  } = {}\n) {\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method} request to \"${pathname}\" but ` +\n        `did not provide a \\`loader\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = `No route matches URL \"${pathname}\"`;\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method.toUpperCase()} request to \"${pathname}\" but ` +\n        `did not provide an \\`action\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (method) {\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n  }\n\n  return new ErrorResponse(\n    status || 500,\n    statusText,\n    new Error(errorMessage),\n    true\n  );\n}\n\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(results: DataResult[]): RedirectResult | undefined {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n    if (isRedirectResult(result)) {\n      return result;\n    }\n  }\n}\n\nfunction stripHashFromPath(path: To) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({ ...parsedPath, hash: \"\" });\n}\n\nfunction isHashChangeOnly(a: Location, b: Location): boolean {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n\n  if (a.hash === \"\") {\n    // No hash -> hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // current hash -> same hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // current hash -> new hash\n    return true;\n  }\n\n  return false;\n}\n\nfunction isDeferredResult(result: DataResult): result is DeferredResult {\n  return result.type === ResultType.deferred;\n}\n\nfunction isErrorResult(result: DataResult): result is ErrorResult {\n  return result.type === ResultType.error;\n}\n\nfunction isRedirectResult(result?: DataResult): result is RedirectResult {\n  return (result && result.type) === ResultType.redirect;\n}\n\nexport function isDeferredData(value: any): value is DeferredData {\n  let deferred: DeferredData = value;\n  return (\n    deferred &&\n    typeof deferred === \"object\" &&\n    typeof deferred.data === \"object\" &&\n    typeof deferred.subscribe === \"function\" &&\n    typeof deferred.cancel === \"function\" &&\n    typeof deferred.resolveData === \"function\"\n  );\n}\n\nfunction isResponse(value: any): value is Response {\n  return (\n    value != null &&\n    typeof value.status === \"number\" &&\n    typeof value.statusText === \"string\" &&\n    typeof value.headers === \"object\" &&\n    typeof value.body !== \"undefined\"\n  );\n}\n\nfunction isRedirectResponse(result: any): result is Response {\n  if (!isResponse(result)) {\n    return false;\n  }\n\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\n\nfunction isQueryRouteResponse(obj: any): obj is QueryRouteResponse {\n  return (\n    obj &&\n    isResponse(obj.response) &&\n    (obj.type === ResultType.data || ResultType.error)\n  );\n}\n\nfunction isValidMethod(method: string): method is FormMethod | V7_FormMethod {\n  return validRequestMethods.has(method.toLowerCase() as FormMethod);\n}\n\nfunction isMutationMethod(\n  method: string\n): method is MutationFormMethod | V7_MutationFormMethod {\n  return validMutationMethods.has(method.toLowerCase() as MutationFormMethod);\n}\n\nasync function resolveDeferredResults(\n  currentMatches: AgnosticDataRouteMatch[],\n  matchesToLoad: (AgnosticDataRouteMatch | null)[],\n  results: DataResult[],\n  signals: (AbortSignal | null)[],\n  isFetcher: boolean,\n  currentLoaderData?: RouteData\n) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index];\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n\n    let currentMatch = currentMatches.find(\n      (m) => m.route.id === match!.route.id\n    );\n    let isRevalidatingLoader =\n      currentMatch != null &&\n      !isNewRouteInstance(currentMatch, match) &&\n      (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      let signal = signals[index];\n      invariant(\n        signal,\n        \"Expected an AbortSignal for revalidating fetcher deferred result\"\n      );\n      await resolveDeferredData(result, signal, isFetcher).then((result) => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\n\nasync function resolveDeferredData(\n  result: DeferredResult,\n  signal: AbortSignal,\n  unwrap = false\n): Promise<SuccessResult | ErrorResult | undefined> {\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData,\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e,\n      };\n    }\n  }\n\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data,\n  };\n}\n\nfunction hasNakedIndexQuery(search: string): boolean {\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\n}\n\n// Note: This should match the format exported by useMatches, so if you change\n// this please also change that :)  Eventually we'll DRY this up\nfunction createUseMatchesMatch(\n  match: AgnosticDataRouteMatch,\n  loaderData: RouteData\n): UseMatchesMatch {\n  let { route, pathname, params } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id] as unknown,\n    handle: route.handle as unknown,\n  };\n}\n\nfunction getTargetMatch(\n  matches: AgnosticDataRouteMatch[],\n  location: Location | string\n) {\n  let search =\n    typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (\n    matches[matches.length - 1].route.index &&\n    hasNakedIndexQuery(search || \"\")\n  ) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\n//#endregion\n","import * as React from \"react\";\nimport type {\n  AgnosticRouteMatch,\n  AgnosticIndexRouteObject,\n  AgnosticNonIndexRouteObject,\n  History,\n  Location,\n  RelativeRoutingType,\n  Router,\n  StaticHandlerContext,\n  To,\n  TrackedPromise,\n  LazyRouteFunction,\n} from \"@remix-run/router\";\nimport type { Action as NavigationType } from \"@remix-run/router\";\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nexport interface IndexRouteObject {\n  caseSensitive?: AgnosticIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticIndexRouteObject[\"path\"];\n  id?: AgnosticIndexRouteObject[\"id\"];\n  loader?: AgnosticIndexRouteObject[\"loader\"];\n  action?: AgnosticIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticIndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n}\n\nexport interface NonIndexRouteObject {\n  caseSensitive?: AgnosticNonIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticNonIndexRouteObject[\"path\"];\n  id?: AgnosticNonIndexRouteObject[\"id\"];\n  loader?: AgnosticNonIndexRouteObject[\"loader\"];\n  action?: AgnosticNonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticNonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticNonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticNonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: RouteObject[];\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n}\n\nexport type RouteObject = IndexRouteObject | NonIndexRouteObject;\n\nexport type DataRouteObject = RouteObject & {\n  children?: DataRouteObject[];\n  id: string;\n};\n\nexport interface RouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends RouteObject = RouteObject\n> extends AgnosticRouteMatch<ParamKey, RouteObjectType> {}\n\nexport interface DataRouteMatch extends RouteMatch<string, DataRouteObject> {}\n\nexport interface DataRouterContextObject extends NavigationContextObject {\n  router: Router;\n  staticContext?: StaticHandlerContext;\n}\n\nexport const DataRouterContext =\n  React.createContext<DataRouterContextObject | null>(null);\nif (__DEV__) {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nexport const DataRouterStateContext = React.createContext<\n  Router[\"state\"] | null\n>(null);\nif (__DEV__) {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nexport const AwaitContext = React.createContext<TrackedPromise | null>(null);\nif (__DEV__) {\n  AwaitContext.displayName = \"Await\";\n}\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport interface Navigator {\n  createHref: History[\"createHref\"];\n  // Optional for backwards-compat with Router/HistoryRouter usage (edge case)\n  encodeLocation?: History[\"encodeLocation\"];\n  go: History[\"go\"];\n  push(to: To, state?: any, opts?: NavigateOptions): void;\n  replace(to: To, state?: any, opts?: NavigateOptions): void;\n}\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\nexport interface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n  isDataRoute: boolean;\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n  isDataRoute: false,\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n\nexport const RouteErrorContext = React.createContext<any>(null);\n\nif (__DEV__) {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n","import * as React from \"react\";\nimport type {\n  Blocker,\n  BlockerFunction,\n  Location,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathPattern,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RevalidationState,\n  To,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  UNSAFE_invariant as invariant,\n  isRouteErrorResponse,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  resolveTo,\n  UNSAFE_getPathContributingMatches as getPathContributingMatches,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  NavigateOptions,\n  RouteContextObject,\n  RouteMatch,\n  RouteObject,\n  DataRouteMatch,\n} from \"./context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n  RouteErrorContext,\n  AwaitContext,\n} from \"./context\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nexport function useHref(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname =\n      pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, pathname),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\nconst navigateEffectWarning =\n  `You should call navigate() in a React.useEffect(), not when ` +\n  `your component is first rendered.`;\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(\n  cb: Parameters<typeof React.useLayoutEffect>[0]\n) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nexport function useNavigate(): NavigateFunction {\n  let { isDataRoute } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\n\nfunction useNavigateUnstable(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our history listener yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n\n      // If we're operating within a basename, prepend it to the pathname prior\n      // to handing off to history.  If this is a root navigation, then we\n      // navigate to the raw basename which allows the basename to have full\n      // control over the presence of a trailing slash on root links\n      if (basename !== \"/\") {\n        path.pathname =\n          path.pathname === \"/\"\n            ? basename\n            : joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [basename, navigator, routePathnamesJson, locationPathname]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nexport function useResolvedPath(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): Path {\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  return React.useMemo(\n    () =>\n      resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        relative === \"path\"\n      ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nexport function useRoutesImpl(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string,\n  dataRouterState?: RemixRouter[\"state\"]\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { navigator } = React.useContext(NavigationContext);\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname =\n    parentPathnameBase === \"/\"\n      ? pathname\n      : pathname.slice(parentPathnameBase.length) || \"/\";\n\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined ||\n        matches[matches.length - 1].route.Component !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" ` +\n        `does not have an element or Component. This means it will render an <Outlet /> with a ` +\n        `null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  let renderedMatches = _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([\n            parentPathnameBase,\n            // Re-encode pathnames that were decoded inside matchRoutes\n            navigator.encodeLocation\n              ? navigator.encodeLocation(match.pathname).pathname\n              : match.pathname,\n          ]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([\n                  parentPathnameBase,\n                  // Re-encode pathnames that were decoded inside matchRoutes\n                  navigator.encodeLocation\n                    ? navigator.encodeLocation(match.pathnameBase).pathname\n                    : match.pathnameBase,\n                ]),\n        })\n      ),\n    parentMatches,\n    dataRouterState\n  );\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return (\n      <LocationContext.Provider\n        value={{\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location,\n          },\n          navigationType: NavigationType.Pop,\n        }}\n      >\n        {renderedMatches}\n      </LocationContext.Provider>\n    );\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error)\n    ? `${error.status} ${error.statusText}`\n    : error instanceof Error\n    ? error.message\n    : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n\n  let devInfo = null;\n  if (__DEV__) {\n    console.error(\n      \"Error handled by React Router default ErrorBoundary:\",\n      error\n    );\n\n    devInfo = (\n      <>\n        <p>💿 Hey developer 👋</p>\n        <p>\n          You can provide a way better UX than this when your app throws errors\n          by providing your own <code style={codeStyles}>ErrorBoundary</code> or{\" \"}\n          <code style={codeStyles}>errorElement</code> prop on your route.\n        </p>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h2>Unexpected Application Error!</h2>\n      <h3 style={{ fontStyle: \"italic\" }}>{message}</h3>\n      {stack ? <pre style={preStyles}>{stack}</pre> : null}\n      {devInfo}\n    </>\n  );\n}\n\nconst defaultErrorElement = <DefaultErrorComponent />;\n\ntype RenderErrorBoundaryProps = React.PropsWithChildren<{\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n  component: React.ReactNode;\n  routeContext: RouteContextObject;\n}>;\n\ntype RenderErrorBoundaryState = {\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n};\n\nexport class RenderErrorBoundary extends React.Component<\n  RenderErrorBoundaryProps,\n  RenderErrorBoundaryState\n> {\n  constructor(props: RenderErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error,\n    };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error: error };\n  }\n\n  static getDerivedStateFromProps(\n    props: RenderErrorBoundaryProps,\n    state: RenderErrorBoundaryState\n  ) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (\n      state.location !== props.location ||\n      (state.revalidation !== \"idle\" && props.revalidation === \"idle\")\n    ) {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation,\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error || state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation,\n    };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    return this.state.error ? (\n      <RouteContext.Provider value={this.props.routeContext}>\n        <RouteErrorContext.Provider\n          value={this.state.error}\n          children={this.props.component}\n        />\n      </RouteContext.Provider>\n    ) : (\n      this.props.children\n    );\n  }\n}\n\ninterface RenderedRouteProps {\n  routeContext: RouteContextObject;\n  match: RouteMatch<string, RouteObject>;\n  children: React.ReactNode | null;\n}\n\nfunction RenderedRoute({ routeContext, match, children }: RenderedRouteProps) {\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (\n    dataRouterContext &&\n    dataRouterContext.static &&\n    dataRouterContext.staticContext &&\n    (match.route.errorElement || match.route.ErrorBoundary)\n  ) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return (\n    <RouteContext.Provider value={routeContext}>\n      {children}\n    </RouteContext.Provider>\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = [],\n  dataRouterState: RemixRouter[\"state\"] | null = null\n): React.ReactElement | null {\n  if (matches == null) {\n    if (dataRouterState?.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id]\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for errors on route IDs: ${Object.keys(\n        errors\n      ).join(\",\")}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors?.[match.route.id] : null;\n    // Only data routers handle errors\n    let errorElement: React.ReactNode | null = null;\n    if (dataRouterState) {\n      errorElement = match.route.errorElement || defaultErrorElement;\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children: React.ReactNode;\n      if (error) {\n        children = errorElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = <match.route.Component />;\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return (\n        <RenderedRoute\n          match={match}\n          routeContext={{\n            outlet,\n            matches,\n            isDataRoute: dataRouterState != null,\n          }}\n          children={children}\n        />\n      );\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState &&\n      (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? (\n      <RenderErrorBoundary\n        location={dataRouterState.location}\n        revalidation={dataRouterState.revalidation}\n        component={errorElement}\n        error={error}\n        children={getChildren()}\n        routeContext={{ outlet: null, matches, isDataRoute: true }}\n      />\n    ) : (\n      getChildren()\n    );\n  }, null as React.ReactElement | null);\n}\n\nenum DataRouterHook {\n  UseBlocker = \"useBlocker\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n}\n\nenum DataRouterStateHook {\n  UseBlocker = \"useBlocker\",\n  UseLoaderData = \"useLoaderData\",\n  UseActionData = \"useActionData\",\n  UseRouteError = \"useRouteError\",\n  UseNavigation = \"useNavigation\",\n  UseRouteLoaderData = \"useRouteLoaderData\",\n  UseMatches = \"useMatches\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n  UseRouteId = \"useRouteId\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\nfunction useRouteContext(hookName: DataRouterStateHook) {\n  let route = React.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName: DataRouterStateHook) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nexport function useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nexport function useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nexport function useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return {\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation,\n  };\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nexport function useMatches() {\n  let { matches, loaderData } = useDataRouterState(\n    DataRouterStateHook.UseMatches\n  );\n  return React.useMemo(\n    () =>\n      matches.map((match) => {\n        let { pathname, params } = match;\n        // Note: This structure matches that created by createUseMatchesMatch\n        // in the @remix-run/router , so if you change this please also change\n        // that :)  Eventually we'll DRY this up\n        return {\n          id: match.route.id,\n          pathname,\n          params,\n          data: loaderData[match.route.id] as unknown,\n          handle: match.route.handle as unknown,\n        };\n      }),\n    [matches, loaderData]\n  );\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nexport function useLoaderData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\n      `You cannot \\`useLoaderData\\` in an errorElement (routeId: ${routeId})`\n    );\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nexport function useRouteLoaderData(routeId: string): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nexport function useActionData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useActionData must be used inside a RouteContext`);\n\n  return Object.values(state?.actionData || {})[0];\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nexport function useRouteError(): unknown {\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return state.errors?.[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\nexport function useAsyncValue(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._data;\n}\n\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\nexport function useAsyncError(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._error;\n}\n\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nexport function useBlocker(shouldBlock: boolean | BlockerFunction): Blocker {\n  let { router } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n  let [blockerKey] = React.useState(() => String(++blockerId));\n\n  let blockerFunction = React.useCallback<BlockerFunction>(\n    (args) => {\n      return typeof shouldBlock === \"function\"\n        ? !!shouldBlock(args)\n        : !!shouldBlock;\n    },\n    [shouldBlock]\n  );\n\n  let blocker = router.getBlocker(blockerKey, blockerFunction);\n\n  // Cleanup on unmount\n  React.useEffect(\n    () => () => router.deleteBlocker(blockerKey),\n    [router, blockerKey]\n  );\n\n  // Prefer the blocker from state since DataRouterContext is memoized so this\n  // ensures we update on blocker state updates\n  return state.blockers.get(blockerKey) || blocker;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable(): NavigateFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our router subscriber yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        router.navigate(to);\n      } else {\n        router.navigate(to, { fromRouteId: id, ...options });\n      }\n    },\n    [router, id]\n  );\n\n  return navigate;\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\n\nfunction warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n","import * as React from \"react\";\nimport type {\n  TrackedPromise,\n  InitialEntry,\n  Location,\n  MemoryHistory,\n  Router as RemixRouter,\n  To,\n  LazyRouteFunction,\n  RelativeRoutingType,\n  RouterState,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  AbortedDeferredError,\n  createMemoryHistory,\n  UNSAFE_invariant as invariant,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n  UNSAFE_getPathContributingMatches as getPathContributingMatches,\n} from \"@remix-run/router\";\n\nimport type {\n  DataRouteObject,\n  IndexRouteObject,\n  RouteMatch,\n  RouteObject,\n  Navigator,\n  NonIndexRouteObject,\n} from \"./context\";\nimport {\n  LocationContext,\n  NavigationContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  AwaitContext,\n  RouteContext,\n} from \"./context\";\nimport {\n  useAsyncValue,\n  useInRouterContext,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  _renderMatches,\n  useRoutesImpl,\n  useLocation,\n} from \"./hooks\";\n\nexport interface RouterProviderProps {\n  fallbackElement?: React.ReactNode;\n  router: RemixRouter;\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n}: RouterProviderProps): React.ReactElement {\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  let [state, setState] = React.useState(router.state);\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <Router\n            basename={router.basename}\n            location={router.state.location}\n            navigationType={router.state.historyAction}\n            navigator={navigator}\n          >\n            {router.state.initialized ? (\n              <DataRoutes routes={router.routes} state={state} />\n            ) : (\n              fallbackElement\n            )}\n          </Router>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nfunction DataRoutes({\n  routes,\n  state,\n}: {\n  routes: DataRouteObject[];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state);\n}\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true,\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nexport function Navigate({\n  to,\n  replace,\n  state,\n  relative,\n}: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  warning(\n    !React.useContext(NavigationContext).static,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(\n    to,\n    getPathContributingMatches(matches).map((match) => match.pathnameBase),\n    locationPathname,\n    relative === \"path\"\n  );\n  let jsonPath = JSON.stringify(path);\n\n  React.useEffect(\n    () => navigate(JSON.parse(jsonPath), { replace, state, relative }),\n    [navigate, jsonPath, relative, replace, state]\n  );\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: NonIndexRouteObject[\"caseSensitive\"];\n  path?: NonIndexRouteObject[\"path\"];\n  id?: NonIndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n  loader?: NonIndexRouteObject[\"loader\"];\n  action?: NonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: NonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: NonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: NonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport interface LayoutRouteProps extends PathRouteProps {}\n\nexport interface IndexRouteProps {\n  caseSensitive?: IndexRouteObject[\"caseSensitive\"];\n  path?: IndexRouteObject[\"path\"];\n  id?: IndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n  loader?: IndexRouteObject[\"loader\"];\n  action?: IndexRouteObject[\"action\"];\n  hasErrorBoundary?: IndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: IndexRouteObject[\"shouldRevalidate\"];\n  handle?: IndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport type RouteProps = PathRouteProps | LayoutRouteProps | IndexRouteProps;\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nexport function Route(_props: RouteProps): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(\n    () => ({ basename, navigator, static: staticProp }),\n    [basename, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key,\n      },\n      navigationType,\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n\n  warning(\n    locationContext != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (locationContext == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider children={children} value={locationContext} />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n\nexport interface AwaitResolveRenderFunction {\n  (data: Awaited<any>): React.ReactNode;\n}\n\nexport interface AwaitProps {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nexport function Await({ children, errorElement, resolve }: AwaitProps) {\n  return (\n    <AwaitErrorBoundary resolve={resolve} errorElement={errorElement}>\n      <ResolveAwait>{children}</ResolveAwait>\n    </AwaitErrorBoundary>\n  );\n}\n\ntype AwaitErrorBoundaryProps = React.PropsWithChildren<{\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}>;\n\ntype AwaitErrorBoundaryState = {\n  error: any;\n};\n\nenum AwaitRenderStatus {\n  pending,\n  success,\n  error,\n}\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component<\n  AwaitErrorBoundaryProps,\n  AwaitErrorBoundaryState\n> {\n  constructor(props: AwaitErrorBoundaryProps) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    let { children, errorElement, resolve } = this.props;\n\n    let promise: TrackedPromise | null = null;\n    let status: AwaitRenderStatus = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if ((resolve as TrackedPromise)._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status =\n        promise._error !== undefined\n          ? AwaitRenderStatus.error\n          : promise._data !== undefined\n          ? AwaitRenderStatus.success\n          : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data: any) =>\n          Object.defineProperty(resolve, \"_data\", { get: () => data }),\n        (error: any) =>\n          Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n\n    if (\n      status === AwaitRenderStatus.error &&\n      promise._error instanceof AbortedDeferredError\n    ) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return <AwaitContext.Provider value={promise} children={errorElement} />;\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return <AwaitContext.Provider value={promise} children={children} />;\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\nfunction ResolveAwait({\n  children,\n}: {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n}) {\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return <>{toRender}</>;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode,\n  parentPath: number[] = []\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element, index) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    let treePath = [...parentPath, index];\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, treePath)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n\n    let route: RouteObject = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary:\n        element.props.ErrorBoundary != null ||\n        element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n","import * as React from \"react\";\nimport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  Blocker,\n  BlockerFunction,\n  Fetcher,\n  HydrationState,\n  JsonFunction,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  Navigation,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  PathPattern,\n  RedirectFunction,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  ShouldRevalidateFunction,\n  To,\n  InitialEntry,\n  LazyRouteFunction,\n  FutureConfig,\n} from \"@remix-run/router\";\nimport {\n  AbortedDeferredError,\n  Action as NavigationType,\n  createMemoryHistory,\n  createPath,\n  createRouter,\n  defer,\n  generatePath,\n  isRouteErrorResponse,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  resolvePath,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  AwaitProps,\n  MemoryRouterProps,\n  NavigateProps,\n  OutletProps,\n  RouteProps,\n  PathRouteProps,\n  LayoutRouteProps,\n  IndexRouteProps,\n  RouterProps,\n  RoutesProps,\n  RouterProviderProps,\n} from \"./lib/components\";\nimport {\n  createRoutesFromChildren,\n  renderMatches,\n  Await,\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n} from \"./lib/components\";\nimport type {\n  DataRouteMatch,\n  DataRouteObject,\n  IndexRouteObject,\n  Navigator,\n  NavigateOptions,\n  NonIndexRouteObject,\n  RouteMatch,\n  RouteObject,\n} from \"./lib/context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n} from \"./lib/context\";\nimport type { NavigateFunction } from \"./lib/hooks\";\nimport {\n  useBlocker,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useMatch,\n  useNavigationType,\n  useNavigate,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRoutes,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useRouteId,\n  useLoaderData,\n  useMatches,\n  useNavigation,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutesImpl,\n} from \"./lib/hooks\";\n\n// Exported for backwards compatibility, but not being used internally anymore\ntype Hash = string;\ntype Pathname = string;\ntype Search = string;\n\n// Expose react-router public API\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  Blocker as unstable_Blocker,\n  BlockerFunction as unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n};\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromChildren as createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useBlocker as unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n};\n\nfunction mapRouteProperties(route: RouteObject) {\n  let updates: Partial<RouteObject> & { hasErrorBoundary: boolean } = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null,\n  };\n\n  if (route.Component) {\n    if (__DEV__) {\n      if (route.element) {\n        warning(\n          false,\n          \"You should not include both `Component` and `element` on your route - \" +\n            \"`Component` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      element: React.createElement(route.Component),\n      Component: undefined,\n    });\n  }\n\n  if (route.ErrorBoundary) {\n    if (__DEV__) {\n      if (route.errorElement) {\n        warning(\n          false,\n          \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" +\n            \"`ErrorBoundary` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      errorElement: React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined,\n    });\n  }\n\n  return updates;\n}\n\nexport function createMemoryRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    future?: Partial<Omit<FutureConfig, \"v7_prependBasename\">>;\n    hydrationData?: HydrationState;\n    initialEntries?: InitialEntry[];\n    initialIndex?: number;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createMemoryHistory({\n      initialEntries: opts?.initialEntries,\n      initialIndex: opts?.initialIndex,\n    }),\n    hydrationData: opts?.hydrationData,\n    routes,\n    mapRouteProperties,\n  }).initialize();\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  NavigationContext as UNSAFE_NavigationContext,\n  LocationContext as UNSAFE_LocationContext,\n  RouteContext as UNSAFE_RouteContext,\n  DataRouterContext as UNSAFE_DataRouterContext,\n  DataRouterStateContext as UNSAFE_DataRouterStateContext,\n  mapRouteProperties as UNSAFE_mapRouteProperties,\n  useRouteId as UNSAFE_useRouteId,\n  useRoutesImpl as UNSAFE_useRoutesImpl,\n};\n","import type {\n  FormEncType,\n  HTMLFormMethod,\n  RelativeRoutingType,\n} from \"@remix-run/router\";\nimport { stripBasename } from \"@remix-run/router\";\n\nexport const defaultMethod: HTMLFormMethod = \"get\";\nconst defaultEncType: FormEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    for (let key of defaultSearchParams.keys()) {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    }\n  }\n\n  return searchParams;\n}\n\nexport interface SubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   */\n  action?: string;\n\n  /**\n   * The action URL used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n}\n\nexport function getFormSubmissionInfo(\n  target:\n    | HTMLFormElement\n    | HTMLButtonElement\n    | HTMLInputElement\n    | FormData\n    | URLSearchParams\n    | { [name: string]: string }\n    | null,\n  options: SubmitOptions,\n  basename: string\n): {\n  action: string | null;\n  method: string;\n  encType: string;\n  formData: FormData;\n} {\n  let method: string;\n  let action: string | null = null;\n  let encType: string;\n  let formData: FormData;\n\n  if (isFormElement(target)) {\n    let submissionTrigger: HTMLButtonElement | HTMLInputElement = (\n      options as any\n    ).submissionTrigger;\n\n    if (options.action) {\n      action = options.action;\n    } else {\n      // When grabbing the action from the element, it will have had the basename\n      // prefixed to ensure non-JS scenarios work, so strip it since we'll\n      // re-prefix in the router\n      let attr = target.getAttribute(\"action\");\n      action = attr ? stripBasename(attr, basename) : null;\n    }\n    method = options.method || target.getAttribute(\"method\") || defaultMethod;\n    encType =\n      options.encType || target.getAttribute(\"enctype\") || defaultEncType;\n\n    formData = new FormData(target);\n\n    if (submissionTrigger && submissionTrigger.name) {\n      formData.append(submissionTrigger.name, submissionTrigger.value);\n    }\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    if (options.action) {\n      action = options.action;\n    } else {\n      // When grabbing the action from the element, it will have had the basename\n      // prefixed to ensure non-JS scenarios work, so strip it since we'll\n      // re-prefix in the router\n      let attr =\n        target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n      action = attr ? stripBasename(attr, basename) : null;\n    }\n\n    method =\n      options.method ||\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    encType =\n      options.encType ||\n      target.getAttribute(\"formenctype\") ||\n      form.getAttribute(\"enctype\") ||\n      defaultEncType;\n\n    formData = new FormData(form);\n\n    // Include name + value from a <button>, appending in case the button name\n    // matches an existing input name\n    if (target.name) {\n      formData.append(target.name, target.value);\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = options.method || defaultMethod;\n    action = options.action || null;\n    encType = options.encType || defaultEncType;\n\n    if (target instanceof FormData) {\n      formData = target;\n    } else {\n      formData = new FormData();\n\n      if (target instanceof URLSearchParams) {\n        for (let [name, value] of target) {\n          formData.append(name, value);\n        }\n      } else if (target != null) {\n        for (let name of Object.keys(target)) {\n          formData.append(name, target[name]);\n        }\n      }\n    }\n  }\n\n  return { action, method: method.toLowerCase(), encType, formData };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type {\n  NavigateOptions,\n  RelativeRoutingType,\n  RouteObject,\n  To,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  unstable_useBlocker as useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_mapRouteProperties as mapRouteProperties,\n  UNSAFE_useRouteId as useRouteId,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  FutureConfig,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HTMLFormMethod,\n  HydrationState,\n  Router as RemixRouter,\n  V7_FormMethod,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  joinPaths,\n  stripBasename,\n  ErrorResponse,\n  UNSAFE_invariant as invariant,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n  V7_FormMethod,\n};\nexport { createSearchParams };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  unstable_Blocker,\n  unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_useRouteId,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\ninterface DOMRouterOpts {\n  basename?: string;\n  future?: Partial<Omit<FutureConfig, \"v7_prependBasename\">>;\n  hydrationData?: HydrationState;\n  window?: Window;\n}\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponse(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      let error = new Error(val.message);\n      // Wipe away the client-side stack trace.  Nothing to fill it in with\n      // because we don't serialize SSR stack traces for security reasons\n      error.stack = \"\";\n      serialized[key] = error;\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({ basename, children, window }: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({ basename, children, history }: HistoryRouterProps) {\n  const [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n}\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      ...rest\n    },\n    ref\n  ) {\n    let { basename } = React.useContext(NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\")\n            ? new URL(currentUrl.protocol + to)\n            : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            // Strip the protocol/origin/basename for same-origin absolute URLs\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          // We can't do external URL detection without a valid URL\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break ` +\n              `when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = useHref(to, { relative });\n\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={absoluteHref || href}\n        onClick={isExternal || reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?:\n    | React.ReactNode\n    | ((props: { isActive: boolean; isPending: boolean }) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?:\n    | string\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => React.CSSProperties | undefined);\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator } = React.useContext(NavigationContext);\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(toPathname.length) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp({ isActive, isPending });\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\"\n        ? styleProp({ isActive, isPending })\n        : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n      >\n        {typeof children === \"function\"\n          ? children({ isActive, isPending })\n          : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\nexport interface FormProps extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (props, ref) => {\n    return <FormImpl {...props} ref={ref} />;\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\ninterface FormImplProps extends FormProps {\n  fetcherKey?: string;\n  routeId?: string;\n}\n\nconst FormImpl = React.forwardRef<HTMLFormElement, FormImplProps>(\n  (\n    {\n      reloadDocument,\n      replace,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      fetcherKey,\n      routeId,\n      relative,\n      preventScrollReset,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let submit = useSubmitImpl(fetcherKey, routeId);\n    let formMethod: HTMLFormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let formAction = useFormAction(action, { relative });\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as HTMLFormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        method: submitMethod,\n        replace,\n        relative,\n        preventScrollReset,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  FormImpl.displayName = \"FormImpl\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmitImpl = \"useSubmitImpl\",\n  UseFetcher = \"useFetcher\",\n}\n\nenum DataRouterStateHook {\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, { replace, state, preventScrollReset, relative });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\ntype SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\ntype SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | { [name: string]: string }\n  | null;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  return useSubmitImpl();\n}\n\nfunction useSubmitImpl(\n  fetcherKey?: string,\n  fetcherRouteId?: string\n): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmitImpl);\n  let { basename } = React.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n\n  return React.useCallback(\n    (target, options = {}) => {\n      if (typeof document === \"undefined\") {\n        throw new Error(\n          \"You are calling submit during the server render. \" +\n            \"Try calling submit within a `useEffect` or callback instead.\"\n        );\n      }\n\n      let { action, method, encType, formData } = getFormSubmissionInfo(\n        target,\n        options,\n        basename\n      );\n\n      // Base options shared between fetch() and navigate()\n      let opts = {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        formMethod: method as HTMLFormMethod,\n        formEncType: encType as FormEncType,\n      };\n\n      if (fetcherKey) {\n        invariant(\n          fetcherRouteId != null,\n          \"No routeId available for useFetcher()\"\n        );\n        router.fetch(fetcherKey, fetcherRouteId, action, opts);\n      } else {\n        router.navigate(action, {\n          ...opts,\n          replace: options.replace,\n          fromRouteId: currentRouteId,\n        });\n      }\n    },\n    [router, basename, fetcherKey, fetcherRouteId, currentRouteId]\n  );\n}\n\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params and the hash of the resolved\n  // URL. This is the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to these directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    // or hash\n    path.search = location.search;\n    path.hash = location.hash;\n\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey: string, routeId: string) {\n  let FetcherForm = React.forwardRef<HTMLFormElement, FormProps>(\n    (props, ref) => {\n      return (\n        <FormImpl\n          {...props}\n          ref={ref}\n          fetcherKey={fetcherKey}\n          routeId={routeId}\n        />\n      );\n    }\n  );\n  if (__DEV__) {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: ReturnType<typeof createFetcherForm>;\n  submit: (\n    target: SubmitTarget,\n    // Fetchers cannot replace/preventScrollReset because they are not\n    // navigation events\n    options?: Omit<SubmitOptions, \"replace\" | \"preventScrollReset\">\n  ) => void;\n  load: (href: string) => void;\n};\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>(): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    invariant(routeId, `No routeId available for fetcher.Form()`);\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => (href: string) => {\n    invariant(router, \"No router available for fetcher.load()\");\n    invariant(routeId, \"No routeId available for fetcher.load()\");\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitImpl(fetcherKey, routeId);\n\n  let fetcher = router.getFetcher<TData>(fetcherKey);\n\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form,\n      submit,\n      load,\n      ...fetcher,\n    }),\n    [fetcher, Form, submit, load]\n  );\n\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(`No router available to clean up from useFetcher()`);\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): Fetcher[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return [...state.fetchers.values()];\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on pagehide\n  usePageHide(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      sessionStorage.setItem(\n        storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n        JSON.stringify(savedScrollPositions)\n      );\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKey\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(location.hash.slice(1));\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(\n  callback: (event: PageTransitionEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({ when, message }: { when: boolean; message: string }) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n//#endregion\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}"],"names":["_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","undefined","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","args","arguments","apply","_construct","Parent","Class","isNativeReflectConstruct","Reflect","construct","bind","a","instance","Function","_wrapNativeSuper","_cache","Map","toString","indexOf","has","get","set","Wrapper","Action","ResultType","PopStateEventType","createMemoryHistory","options","entries","_options","_options$initialEntri","initialEntries","initialIndex","_options$v5Compat","v5Compat","map","index","createMemoryLocation","clampIndex","action","Pop","listener","Math","min","max","getCurrentLocation","to","location","createLocation","pathname","warning","JSON","stringify","createHref","createPath","createURL","URL","encodeLocation","path","parsePath","search","hash","Push","nextLocation","splice","delta","replace","Replace","go","nextIndex","listen","createBrowserHistory","getUrlBasedHistory","window","globalHistory","_window$location","usr","createHashHistory","_parsePath","substr","_parsePath$pathname","_parsePath$search","_parsePath$hash","base","document","querySelector","href","getAttribute","url","hashIndex","invariant","message","cond","console","warn","getHistoryState","idx","current","_extends","random","_ref","_ref$pathname","_ref$search","_ref$hash","parsedPath","searchIndex","getLocation","validateLocation","_options2","_options2$window","defaultView","_options2$v5Compat","history","getIndex","handlePop","origin","replaceState","addEventListener","removeEventListener","historyState","pushState","assign","immutableRouteKeys","Set","convertRoutesToDataRoutes","routes","mapRouteProperties","parentPath","manifest","route","treePath","concat","_toConsumableArray","id","join","children","isIndexRoute","indexRoute","pathOrLayoutRoute","matchRoutes","locationArg","basename","stripBasename","branches","flattenRoutes","sort","b","score","siblings","every","compareIndexes","routesMeta","meta","childrenIndex","rankRouteBranches","matches","matchRouteBranch","safelyDecodeURI","parentsMeta","flattenRoute","relativePath","caseSensitive","startsWith","joinPaths","computeScore","_route$path","includes","_step","_iterator","explodeOptionalSegments","exploded","segments","split","_segments","_toArray","first","rest","isOptional","endsWith","required","restExploded","subpath","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","initialScore","some","filter","reduce","segment","test","branch","matchedParams","matchedPathname","end","remainingPathname","match","matchPath","params","pathnameBase","normalizePathname","generatePath","originalPath","array","keyMatch","_keyMatch","_slicedToArray","optional","param","pattern","_compilePath","paramNames","regexpSource","_","paramName","matcher","RegExp","compilePath","_compilePath2","captureGroups","memo","splatValue","decodeURIComponent","safelyDecodeURIComponent","decodeURI","toLowerCase","startIndex","nextChar","resolvePath","fromPathname","_ref3","toPathname","_ref3$search","_ref3$hash","resolvePathname","normalizeSearch","normalizeHash","getInvalidPathError","char","field","dest","getPathContributingMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","from","isEmptyPath","routePathnameIndex","toSegments","shift","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","json","data","init","responseInit","status","headers","Headers","Response","AbortedDeferredError","_Error","_inherits","_super","_createSuper","_classCallCheck","_createClass","DeferredData","_this","pendingKeysSet","subscribers","deferredKeys","abortPromise","r","controller","AbortController","onAbort","unlistenAbortSignal","signal","acc","_ref4","_defineProperty","trackPromise","_this2","add","promise","race","onSettle","catch","aborted","delete","emit","settledKey","subscriber","_this3","_this4","abort","v","k","_resolveData","_asyncToGenerator","_regeneratorRuntime","_callee","_this5","_context","cancel","subscribe","_x","size","_ref2","_ref5","_tracked","isTrackedPromise","_error","_data","unwrapTrackedPromise","defer","redirect","ErrorResponse","statusText","internal","isRouteErrorResponse","validMutationMethodsArr","validMutationMethods","validRequestMethodsArr","validRequestMethods","redirectStatusCodes","redirectPreserveMethodStatusCodes","IDLE_NAVIGATION","formMethod","formAction","formEncType","formData","IDLE_FETCHER","IDLE_BLOCKER","proceed","ABSOLUTE_URL_REGEX","isBrowser","createElement","isServer","defaultMapRouteProperties","hasErrorBoundary","Boolean","createRouter","detectErrorBoundary","inFlightDataRoutes","dataRoutes","future","v7_normalizeFormMethod","v7_prependBasename","unlistenHistory","savedScrollPositions","getScrollRestorationKey","getScrollPosition","initialScrollRestored","hydrationData","initialMatches","initialErrors","getInternalRouterError","_getShortCircuitMatch","getShortCircuitMatches","router","pendingNavigationController","initialized","m","lazy","loader","historyAction","navigation","restoreScrollPosition","preventScrollReset","revalidation","loaderData","actionData","errors","fetchers","blockers","pendingAction","pendingPreventScrollReset","isUninterruptedRevalidation","isRevalidationRequired","cancelledDeferredRoutes","cancelledFetcherLoads","fetchControllers","incrementingLoadId","pendingNavigationLoadId","fetchReloadIds","fetchRedirectIds","fetchLoadMatches","activeDeferreds","blockerFunctions","ignoreNextHistoryUpdate","updateState","newState","completeNavigation","_location$state","_location$state2","isActionReload","isMutationMethod","_isRedirect","_step2","mergeLoaderData","_iterator2","deleteBlocker","getSavedScrollPosition","navigate","_x2","_x3","_navigate","_callee2","opts","normalizedPath","_normalizeNavigateOpt2","submission","currentLocation","userReplace","blockerKey","_context2","normalizeTo","fromRouteId","relative","normalizeNavigateOptions","shouldBlockNavigation","updateBlocker","startNavigation","pendingError","_x4","_x5","_x6","_startNavigation","_callee3","routesToUse","loadingNavigation","_getShortCircuitMatch2","notFoundMatches","_route","request","pendingActionData","actionOutput","_yield$handleLoaders","shortCircuited","_context3","startUninterruptedRevalidation","saveScrollPosition","overrideNavigation","cancelActiveDeferreds","isHashChangeOnly","createClientSideRequest","findNearestBoundary","handleAction","pendingActionError","Request","handleLoaders","fetcherSubmission","_x7","_x8","_x9","_x10","_x11","_handleAction","_callee4","actionMatch","boundaryMatch","_context4","interruptActiveLoads","getTargetMatch","routeId","callLoaderOrAction","isRedirectResult","startRedirectNavigation","isErrorResult","isDeferredResult","_x12","_x13","_x14","_x15","_x16","_x17","_x18","_x19","_x20","_handleLoaders","_callee5","activeSubmission","_getMatchesToLoad","_getMatchesToLoad2","matchesToLoad","revalidatingFetchers","_updatedFetchers","abortPendingFetchRevalidations","_yield$callLoadersAnd","results","loaderResults","fetcherResults","_processLoaderData","updatedFetchers","didAbortFetchLoads","shouldUpdateFetchers","_context5","getMatchesToLoad","markFetchRedirectsDone","rf","fetcher","revalidatingFetcher","abortFetcher","callLoadersAndMaybeResolveData","findRedirect","processLoaderData","deferredData","abortStaleFetchLoads","getFetcher","_handleFetcherAction","_callee6","requestMatches","_error2","existingFetcher","abortController","fetchRequest","actionResult","loadingFetcher","revalidationRequest","loadId","loadFetcher","_getMatchesToLoad3","_getMatchesToLoad4","_yield$callLoadersAnd2","_processLoaderData2","doneFetcher","_context6","setFetcherError","isFetchActionRedirect","staleKey","_handleFetcherLoader","_callee7","_context7","resolveDeferredData","t0","_x33","_x34","_x35","_startRedirectNavigation","_callee8","_temp","_window","_ref6","redirectLocation","isDifferentBasename","redirectHistoryAction","_state$navigation","_context8","revalidate","_isFetchActionRedirect","_x36","_x37","_x38","_x39","_x40","_callLoadersAndMaybeResolveData","_callee9","currentMatches","fetchersToLoad","_context9","all","resolveDeferredResults","_cancelledDeferredRou","deleteFetcher","markFetchersDone","_step3","_iterator3","_step4","doneKeys","_iterator4","landedId","_step5","yeetedKeys","_iterator5","_step5$value","newBlocker","blocker","_entries","blockerFunction","predicate","cancelledRouteIds","dfd","userMatches","createUseMatchesMatch","y","initialize","enableScrollRestoration","positions","getPosition","getKey","fetch","_normalizeNavigateOpt","_x21","_x22","_x23","_x24","_x25","_x26","handleFetcherAction","_x27","_x28","_x29","_x30","_x31","_x32","handleFetcherLoader","dispose","clear","getBlocker","_internalFetchControllers","_internalActiveDeferreds","_internalSetRoutes","newRoutes","prependBasename","contextualMatches","activeRouteMatch","_step6","_iterator6","hasNakedIndexQuery","normalizeFormMethod","isFetcher","isSubmissionNavigation","isValidMethod","toUpperCase","stripHashFromPath","searchParams","convertFormDataToSearchParams","append","getLoaderMatchesUntilBoundary","boundaryId","boundaryMatches","findIndex","currentUrl","nextUrl","navigationMatches","currentLoaderData","currentMatch","isNew","isMissingData","isNewLoader","currentRouteMatch","nextRouteMatch","shouldRevalidateLoader","currentParams","nextParams","defaultShouldRevalidate","isNewRouteInstance","fetcherMatches","fetcherMatch","currentPath","loaderMatch","shouldRevalidate","routeChoice","loadLazyRouteModule","_x60","_x61","_x62","_loadLazyRouteModule","_callee15","lazyRoute","routeToUpdate","routeUpdates","lazyRouteProperty","staticRouteValue","isPropertyStaticallyDefined","_context16","_x63","_x64","_x65","_x66","_x67","_x68","_x69","_x70","_x71","_x72","_callLoaderOrAction","_callee16","isStaticRequest","isRouteRequest","requestContext","resultType","onReject","runHandler","handler","_url","_url2","isSameBasename","contentType","_result$init","_result$init2","_context17","isResponse","protocol","response","text","statusCode","isDeferredData","deferred","body","_step7","URLSearchParams","_iterator7","_step7$value","File","processRouteLoaderData","foundError","loaderHeaders","_processRouteLoaderDa","_revalidatingFetchers","newLoaderData","_step8","mergedLoaderData","_iterator8","find","_temp4","_ref11","errorMessage","resolveData","_x73","_x74","_x75","_x76","_x77","_x78","_resolveDeferredResults","_callee17","signals","_loop","_context19","isRevalidatingLoader","_context18","_x79","_x80","_x81","_resolveDeferredData","_callee18","unwrap","_context20","unwrappedData","getAll","pathMatches","DataRouterContext","React","DataRouterStateContext","AwaitContext","NavigationContext","LocationContext","RouteContext","outlet","isDataRoute","RouteErrorContext","useHref","useInRouterContext","UNSAFE_invariant","_React$useContext","navigator","_useResolvedPath","useResolvedPath","joinedPathname","useLocation","useNavigationType","navigationType","useMatch","useIsomorphicLayoutEffect","cb","static","useNavigate","useDataRouterContext","DataRouterHook","UseNavigateStable","useCurrentRouteId","DataRouterStateHook","activeRef","useNavigateStable","_React$useContext3","routePathnamesJson","UNSAFE_getPathContributingMatches","parse","useNavigateUnstable","OutletContext","useOutletContext","useOutlet","Provider","useParams","routeMatch","_temp2","useRoutes","useRoutesImpl","dataRouterState","parentMatches","parentParams","parentPathnameBase","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","renderedMatches","_renderMatches","DefaultErrorComponent","useRouteError","stack","lightgrey","preStyles","padding","backgroundColor","style","fontStyle","defaultErrorElement","RenderErrorBoundary","_React$Component","props","errorInfo","routeContext","component","RenderedRoute","dataRouterContext","staticContext","errorElement","ErrorBoundary","_deepestRenderedBoundaryId","_dataRouterState2","_dataRouterState","errorIndex","reduceRight","getChildren","Component","element","hookName","ctx","useDataRouterState","useRouteContext","thisRoute","useRouteId","UseRouteId","useNavigation","UseNavigation","useRevalidator","UseRevalidator","useMatches","_useDataRouterState","UseMatches","useLoaderData","UseLoaderData","useRouteLoaderData","UseRouteLoaderData","useActionData","UseActionData","_state$errors","UseRouteError","useAsyncValue","useAsyncError","blockerId","useBlocker","shouldBlock","UseBlocker","_React$useState","String","AwaitRenderStatus","RouterProvider","fallbackElement","_React$useState3","_React$useState4","setState","Router","DataRoutes","MemoryRouter","historyRef","_React$useState5","_React$useState6","Navigate","jsonPath","Outlet","Route","_props","_ref5$basename","basenameProp","_ref5$children","locationProp","_ref5$navigationType","_ref5$static","staticProp","navigationContext","_locationProp","_locationProp$pathnam","_locationProp$search","_locationProp$hash","_locationProp$state","_locationProp$key","locationContext","trailingPathname","Routes","createRoutesFromChildren","Await","_ref7","AwaitErrorBoundary","ResolveAwait","neverSettledPromise","_React$Component2","_super2","_this$props","pending","renderError","success","_ref8","toRender","renderMatches","updates","createMemoryRouter","defaultMethod","defaultEncType","isHtmlElement","tagName","createSearchParams","getFormSubmissionInfo","target","encType","submissionTrigger","attr","FormData","isButtonElement","isInputElement","form","_step2$value","_i","_Object$keys","createBrowserRouter","parseHydrationData","UNSAFE_mapRouteProperties","createHashRouter","__staticRouterHydrationData","deserializeErrors","serialized","_i2","_entries$_i","__type","BrowserRouter","_React$useState2","HashRouter","HistoryRouter","Link","ref","absoluteHref","onClick","reloadDocument","_objectWithoutPropertiesLoose","_excluded","UNSAFE_NavigationContext","isExternal","targetUrl","internalOnClick","useLinkClickHandler","event","defaultPrevented","NavLink","_ref5$ariaCurrent","ariaCurrentProp","_ref5$caseSensitive","_ref5$className","className","classNameProp","_ref5$end","styleProp","_excluded2","routerState","UNSAFE_DataRouterStateContext","nextLocationPathname","isActive","isPending","ariaCurrent","Form","FormImpl","forwardedRef","_ref6$method","onSubmit","fetcherKey","_excluded3","submit","useSubmitImpl","useFormAction","preventDefault","submitter","nativeEvent","submitMethod","currentTarget","ScrollRestoration","useScrollRestoration","storageKey","UNSAFE_DataRouterContext","_ref9","replaceProp","button","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","shouldProcessLinkClick","useSearchParams","defaultInit","defaultSearchParamsRef","hasSetSearchParamsRef","locationSearch","defaultSearchParams","setSearchParams","nextInit","navigateOptions","newSearchParams","useSubmit","fetcherRouteId","UseSubmitImpl","currentRouteId","UNSAFE_useRouteId","_getFormSubmissionInf","UNSAFE_RouteContext","_routeContext$matches","fetcherId","useFetcher","_route$matches","UseFetcher","_React$useState7","_React$useState9","createFetcherForm","_React$useState11","load","fetcherWithComponents","useFetchers","UseFetchers","SCROLL_RESTORATION_STORAGE_KEY","_temp3","UseScrollRestoration","scrollRestoration","callback","capture","usePageHide","scrollY","sessionStorage","setItem","sessionPositions","getItem","disableScrollRestoration","el","getElementById","scrollIntoView","scrollTo","useBeforeUnload","usePrompt","when","unstable_useBlocker","confirm","setTimeout","_assertThisInitialized","ReferenceError","Constructor","_defineProperties","descriptor","protoProps","staticProps","Derived","hasNativeReflectConstruct","Super","NewTarget","assertThisInitialized","_getPrototypeOf","subClass","superClass","_isNativeReflectConstruct","sham","Proxy","valueOf","_iterableToArray","_setPrototypeOf","p","arr","arrayLikeToArray","iterableToArray","_toPropertyKey","input","hint","prim","toPrimitive","res","Number","_typeof"],"sourceRoot":""}